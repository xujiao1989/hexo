{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"source/CNAME","path":"CNAME","modified":0,"renderable":0},{"_id":"source/favicon.ico","path":"favicon.ico","modified":0,"renderable":0},{"_id":"source/uploads/avater.jpeg","path":"uploads/avater.jpeg","modified":0,"renderable":0},{"_id":"themes/next/source/css/main.styl","path":"css/main.styl","modified":1,"renderable":1},{"_id":"themes/next/source/images/algolia_logo.svg","path":"images/algolia_logo.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","path":"images/cc-by-nc-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/avatar.gif","path":"images/avatar.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","path":"images/cc-by-nc-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nc.svg","path":"images/cc-by-nc.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-nd.svg","path":"images/cc-by-nd.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by-sa.svg","path":"images/cc-by-sa.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-by.svg","path":"images/cc-by.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/loading.gif","path":"images/loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/cc-zero.svg","path":"images/cc-zero.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/placeholder.gif","path":"images/placeholder.gif","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-l.svg","path":"images/quote-l.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/quote-r.svg","path":"images/quote-r.svg","modified":1,"renderable":1},{"_id":"themes/next/source/images/searchicon.png","path":"images/searchicon.png","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/affix.js","path":"js/src/affix.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/algolia-search.js","path":"js/src/algolia-search.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/bootstrap.js","path":"js/src/bootstrap.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/exturl.js","path":"js/src/exturl.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/hook-duoshuo.js","path":"js/src/hook-duoshuo.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/motion.js","path":"js/src/motion.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/post-details.js","path":"js/src/post-details.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/scrollspy.js","path":"js/src/scrollspy.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","path":"lib/algolia-instant-search/instantsearch.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/utils.js","path":"js/src/utils.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","path":"lib/canvas-nest/canvas-nest.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/README.md","path":"lib/fastclick/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/LICENSE","path":"lib/fastclick/LICENSE","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/bower.json","path":"lib/fastclick/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","path":"lib/font-awesome/HELP-US-OUT.txt","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/bower.json","path":"lib/font-awesome/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","path":"lib/jquery_lazyload/CONTRIBUTING.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","path":"lib/jquery_lazyload/README.md","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","path":"lib/jquery_lazyload/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","path":"lib/jquery_lazyload/jquery.lazyload.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","path":"lib/jquery_lazyload/jquery.scrollstop.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/bower.json","path":"lib/velocity/bower.json","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.min.js","path":"lib/velocity/velocity.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","path":"lib/velocity/velocity.ui.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","path":"lib/velocity/velocity.ui.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/jquery/index.js","path":"lib/jquery/index.js","modified":1,"renderable":1},{"_id":"themes/next/source/js/src/schemes/pisces.js","path":"js/src/schemes/pisces.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","path":"lib/fancybox/source/blank.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","path":"lib/fancybox/source/fancybox_loading.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","path":"lib/fancybox/source/fancybox_loading@2x.gif","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","path":"lib/fancybox/source/fancybox_sprite.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","path":"lib/fancybox/source/fancybox_sprite@2x.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","path":"lib/fancybox/source/fancybox_overlay.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","path":"lib/fancybox/source/jquery.fancybox.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","path":"lib/fancybox/source/jquery.fancybox.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","path":"lib/fancybox/source/jquery.fancybox.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","path":"lib/fastclick/lib/fastclick.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","path":"lib/fastclick/lib/fastclick.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","path":"lib/font-awesome/css/font-awesome.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","path":"lib/font-awesome/css/font-awesome.css.map","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","path":"lib/font-awesome/css/font-awesome.min.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","path":"lib/ua-parser-js/dist/ua-parser.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","path":"lib/ua-parser-js/dist/ua-parser.pack.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","path":"lib/font-awesome/fonts/fontawesome-webfont.woff","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","path":"lib/font-awesome/fonts/fontawesome-webfont.woff2","modified":1,"renderable":1},{"_id":"themes/next/source/lib/velocity/velocity.js","path":"lib/velocity/velocity.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","path":"lib/fancybox/source/helpers/fancybox_buttons.png","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","path":"lib/fancybox/source/helpers/jquery.fancybox-buttons.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","path":"lib/fancybox/source/helpers/jquery.fancybox-media.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","modified":1,"renderable":1},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","path":"lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","path":"lib/font-awesome/fonts/FontAwesome.otf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","path":"lib/font-awesome/fonts/fontawesome-webfont.eot","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","path":"lib/font-awesome/fonts/fontawesome-webfont.ttf","modified":1,"renderable":1},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","path":"lib/algolia-instant-search/instantsearch.min.js","modified":1,"renderable":1},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","path":"lib/font-awesome/fonts/fontawesome-webfont.svg","modified":1,"renderable":1}],"Cache":[{"_id":"source/404.html","hash":"fd27543297c6ba9e80ae6af4be10fb6922872d58","modified":1489365150000},{"_id":"source/CNAME","hash":"3282b71961c50016849a4dda9e156abc786c97a0","modified":1489365150000},{"_id":"source/favicon.ico","hash":"795fe654c19cf00d899e9f929c5f2dd8b52a9ab7","modified":1489365150000},{"_id":"source/about/index.md","hash":"5e83e7d4409bf8fbf4b73bb96f12d3c0008c177c","modified":1489365150000},{"_id":"source/categories/index.md","hash":"547a51031563abab7cfacb518306c2726b50724e","modified":1489365150000},{"_id":"source/tags/index.md","hash":"2c35c1fb03d6b397bccbcd09dcbf4a7e15515a55","modified":1489365150000},{"_id":"source/uploads/avater.jpeg","hash":"87357ae3dfb7e29d1d439eb5bd82d674430a4de9","modified":1489365150000},{"_id":"source/_posts/个人成长/2017-01-13-plan.md","hash":"68492424332d11cf96405e1b6ce321aab1c75f56","modified":1489365150000},{"_id":"source/_posts/个人成长/前端资料总结.md","hash":"cc67ebeef8b5408f69ad80bec45ca99e4c7a1819","modified":1489365150000},{"_id":"source/_posts/前端面试题/JavaScript面试题.md","hash":"723d68955e34f157a5485fbb1b575be4ea6f8a6f","modified":1489365150000},{"_id":"source/_posts/前端面试题/javascript实现对象的深度克隆.md","hash":"59fd5c6608877b2e01c73db2f7f61f71e084aca3","modified":1489365150000},{"_id":"source/_posts/版本控制/2017-02-13-git学习笔记.md","hash":"bcf98a78106a7873567953e57a036fab4182d02d","modified":1489365150000},{"_id":"source/_posts/网络/HTTP简介.md","hash":"75356ceec069f6560a40566da9be9be7432cd5f0","modified":1489365150000},{"_id":"public/404.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602920},{"_id":"public/about/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602920},{"_id":"public/categories/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602921},{"_id":"public/tags/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602921},{"_id":"public/2017/03/13/前端面试题/javascript实现对象的深度克隆/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602921},{"_id":"public/2017/02/22/网络/HTTP简介/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/2017/02/21/个人成长/前端资料总结/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/2017/02/13/版本控制/2017-02-13-git学习笔记/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/2017/02/13/前端面试题/JavaScript面试题/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/2017/01/13/个人成长/2017-01-13-plan/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/archives/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/archives/2017/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/archives/2017/01/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/archives/2017/02/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/archives/2017/03/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/categories/个人成长/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/categories/HTML5学习笔记/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/categories/javascript/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/categories/代码版本控制/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602922},{"_id":"public/categories/网络/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602923},{"_id":"public/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602923},{"_id":"public/tags/前端开发/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602923},{"_id":"public/tags/个人成长/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602923},{"_id":"public/tags/前端资料总结/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602923},{"_id":"public/tags/JavaScript、HTML、CSS、Node/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602923},{"_id":"public/tags/前端面试题/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602923},{"_id":"public/tags/HTML5简介/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602923},{"_id":"public/tags/js实现对象的深度克隆/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602923},{"_id":"public/tags/javascript/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602923},{"_id":"public/tags/深度克隆/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602923},{"_id":"public/tags/代码版本控制/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602923},{"_id":"public/tags/git/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602924},{"_id":"public/tags/HTTP学习总结/index.html","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379602928},{"_id":"public/CNAME","hash":"3282b71961c50016849a4dda9e156abc786c97a0","modified":1489379602933},{"_id":"public/favicon.ico","hash":"795fe654c19cf00d899e9f929c5f2dd8b52a9ab7","modified":1489379602933},{"_id":"public/uploads/avater.jpeg","hash":"87357ae3dfb7e29d1d439eb5bd82d674430a4de9","modified":1489379602933},{"_id":"themes/next/.bowerrc","hash":"3228a58ed0ece9f85e1e3136352094080b8dece1","modified":1489379089000},{"_id":"themes/next/.editorconfig","hash":"792fd2bd8174ece1a75d5fd24ab16594886f3a7f","modified":1489379089000},{"_id":"themes/next/.gitattributes","hash":"44bd4729c74ccb88110804f41746fec07bf487d4","modified":1489379089000},{"_id":"themes/next/.gitignore","hash":"5f09fca02e030b7676c1d312cd88ce8fbccf381c","modified":1489379089000},{"_id":"themes/next/.hound.yml","hash":"b76daa84c9ca3ad292c78412603370a367cc2bc3","modified":1489379089000},{"_id":"themes/next/.javascript_ignore","hash":"f9ea3c5395f8feb225a24e2c32baa79afda30c16","modified":1489379089000},{"_id":"themes/next/.jshintrc","hash":"9928f81bd822f6a8d67fdbc909b517178533bca9","modified":1489379089000},{"_id":"themes/next/.stylintrc","hash":"b28e24704a5d8de08346c45286574c8e76cc109f","modified":1489379089000},{"_id":"themes/next/.travis.yml","hash":"c42d9608c8c7fe90de7b1581a8dc3886e90c179e","modified":1489379089000},{"_id":"themes/next/LICENSE","hash":"f293bcfcdc06c0b77ba13570bb8af55eb5c059fd","modified":1489379089000},{"_id":"themes/next/README.en.md","hash":"4ece25ee5f64447cd522e54cb0fffd9a375f0bd4","modified":1489379089000},{"_id":"themes/next/README.md","hash":"500b5606eb6a09c979d16128f8b00f4bf9bc95ac","modified":1489379089000},{"_id":"themes/next/_config.yml","hash":"997e8f1aac5d7a741674e2ef117a4f1d63b6b5aa","modified":1489379563000},{"_id":"themes/next/bower.json","hash":"5abc236d9cc2512f5457ed57c1fba76669eb7399","modified":1489379089000},{"_id":"themes/next/gulpfile.coffee","hash":"933e6d29eb82522cff0df209d52b935e91b1111c","modified":1489379089000},{"_id":"themes/next/package.json","hash":"7e87b2621104b39a30488654c2a8a0c6a563574b","modified":1489379089000},{"_id":"themes/next/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1489379089000},{"_id":"themes/next/.git/config","hash":"bf7d1df65cf34d0f25a7184a58c37a09f72e4be7","modified":1489379089000},{"_id":"themes/next/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1489379075000},{"_id":"themes/next/.git/index","hash":"5b906b0491f2768c9a580b2dc41d9144695c83b3","modified":1489379377000},{"_id":"themes/next/.git/packed-refs","hash":"99ae75788437c9db0e2e128b15f8064ddf8f3a4a","modified":1489379089000},{"_id":"themes/next/.github/CONTRIBUTING.md","hash":"5ab257af816986cd0e53f9527a92d5934ac70ae9","modified":1489379089000},{"_id":"themes/next/.github/ISSUE_TEMPLATE.md","hash":"c2024ded82143807c28a299c5fe6b927ef3525ff","modified":1489379089000},{"_id":"themes/next/languages/de.yml","hash":"1fdea1f84b7f691f5b4dd4d2b43eeb27b10fa0c8","modified":1489379089000},{"_id":"themes/next/languages/default.yml","hash":"95ec5cdfb563854f231b76162a3494f6ecc5bf61","modified":1489379089000},{"_id":"themes/next/languages/en.yml","hash":"95ec5cdfb563854f231b76162a3494f6ecc5bf61","modified":1489379089000},{"_id":"themes/next/languages/fr-FR.yml","hash":"e98f1558347752a20019b71f0b1f9c8be1b34f42","modified":1489379089000},{"_id":"themes/next/languages/id.yml","hash":"34396bef27c4ab9e9a3c5d3e3aa94b0e3b3a7b0d","modified":1489379089000},{"_id":"themes/next/languages/ja.yml","hash":"49f12149edcc1892b26a6207328cda64da20116d","modified":1489379089000},{"_id":"themes/next/languages/ko.yml","hash":"b6bc5d6b0c000deb44099b42d3aebb8c49dbfca9","modified":1489379089000},{"_id":"themes/next/languages/pt-BR.yml","hash":"7742ba4c0d682cbe1d38305332ebc928abd754b5","modified":1489379089000},{"_id":"themes/next/languages/pt.yml","hash":"6b660b117314cad93f08757601df3adb04c68beb","modified":1489379089000},{"_id":"themes/next/languages/ru.yml","hash":"5022885d8955e1b91d8841048db272bf99c59a76","modified":1489379089000},{"_id":"themes/next/languages/zh-Hans.yml","hash":"40d01dc46d57f71c2ef635c45b295d4355456e90","modified":1489379089000},{"_id":"themes/next/languages/zh-hk.yml","hash":"19c23d21f262e24c06ee6ddfd51d2a6585304f88","modified":1489379089000},{"_id":"themes/next/languages/zh-tw.yml","hash":"68407799271c78ecc07f03d238257dd8c65ad42d","modified":1489379089000},{"_id":"themes/next/layout/_layout.swig","hash":"2c0c3547a5b470024326a33ae2779d5ee0252266","modified":1489379089000},{"_id":"themes/next/layout/archive.swig","hash":"b5b59d70fc1563f482fa07afd435752774ad5981","modified":1489379089000},{"_id":"themes/next/layout/category.swig","hash":"6422d196ceaff4220d54b8af770e7e957f3364ad","modified":1489379089000},{"_id":"themes/next/layout/index.swig","hash":"427d0b95b854e311ae363088ab39a393bf8fdc8b","modified":1489379089000},{"_id":"themes/next/layout/page.swig","hash":"3727fab9dadb967e9c2204edca787dc72264674a","modified":1489379089000},{"_id":"themes/next/layout/post.swig","hash":"e2e512142961ddfe77eba29eaa88f4a2ee43ae18","modified":1489379089000},{"_id":"themes/next/layout/schedule.swig","hash":"1f1cdc268f4ef773fd3ae693bbdf7d0b2f45c3a3","modified":1489379089000},{"_id":"themes/next/layout/tag.swig","hash":"07cf49c49c39a14dfbe9ce8e7d7eea3d4d0a4911","modified":1489379089000},{"_id":"themes/next/scripts/merge-configs.js","hash":"13c8b3a2d9fce06c2488820d9248d190c8100e0a","modified":1489379089000},{"_id":"themes/next/scripts/merge.js","hash":"9130dabe6a674c54b535f322b17d75fe6081472f","modified":1489379089000},{"_id":"themes/next/test/.jshintrc","hash":"19f93d13d1689fe033c82eb2d5f3ce30b6543cc0","modified":1489379089000},{"_id":"themes/next/test/helpers.js","hash":"a1f5de25154c3724ffc24a91ddc576cdbd60864f","modified":1489379089000},{"_id":"themes/next/test/intern.js","hash":"11fa8a4f5c3b4119a179ae0a2584c8187f907a73","modified":1489379089000},{"_id":"themes/next/source/fonts/.gitkeep","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379089000},{"_id":"themes/next/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1489379075000},{"_id":"themes/next/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1489379075000},{"_id":"themes/next/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1489379075000},{"_id":"themes/next/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1489379075000},{"_id":"themes/next/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1489379075000},{"_id":"themes/next/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1489379075000},{"_id":"themes/next/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1489379075000},{"_id":"themes/next/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1489379075000},{"_id":"themes/next/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1489379075000},{"_id":"themes/next/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1489379075000},{"_id":"themes/next/.git/info/exclude","hash":"bb5a85730dcf100facee799c05cc4f6affec0745","modified":1489379075000},{"_id":"themes/next/.git/logs/HEAD","hash":"b629398777180257bd79db8d771e167a2d41bcea","modified":1489379089000},{"_id":"themes/next/layout/_custom/header.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1489379089000},{"_id":"themes/next/layout/_custom/sidebar.swig","hash":"adc83b19e793491b1c6ea0fd8b46cd9f32e592fc","modified":1489379089000},{"_id":"themes/next/layout/_macro/post-collapse.swig","hash":"5864f5567ba5efeabcf6ea355013c0b603ee07f2","modified":1489379089000},{"_id":"themes/next/layout/_macro/reward.swig","hash":"37e5b7c42ec17b9b6b786c5512bcc481a21c974e","modified":1489379089000},{"_id":"themes/next/layout/_macro/post.swig","hash":"4a191a612383bb04a4705b4044c033f765060207","modified":1489379089000},{"_id":"themes/next/layout/_macro/sidebar.swig","hash":"911b99ba0445b2c07373128d87a4ef2eb7de341a","modified":1489379089000},{"_id":"themes/next/layout/_macro/wechat-subscriber.swig","hash":"14e785adeb0e671ba0ff9a553e6f0d8def6c670c","modified":1489379089000},{"_id":"themes/next/layout/_partials/comments.swig","hash":"970aa668680896262b1056bb5787fc9ec8754495","modified":1489379089000},{"_id":"themes/next/layout/_partials/duoshuo-hot-articles.swig","hash":"5d4638c46aef65bf32a01681495b62416ccc98db","modified":1489379089000},{"_id":"themes/next/layout/_partials/footer.swig","hash":"7172c6053118b7c291a56a7860128a652ae66b83","modified":1489379089000},{"_id":"themes/next/layout/_partials/head.swig","hash":"a0eafe24d1dae30c790ae35612154b3ffbbd5cce","modified":1489379089000},{"_id":"themes/next/layout/_partials/header.swig","hash":"a1ffbb691dfad3eaf2832a11766e58a179003b8b","modified":1489379089000},{"_id":"themes/next/layout/_partials/page-header.swig","hash":"1efd925d34a5d4ba2dc0838d9c86ba911e705fc9","modified":1489379089000},{"_id":"themes/next/layout/_partials/pagination.swig","hash":"9e8e21d194ef44d271b1cca0bc1448c14d7edf4f","modified":1489379089000},{"_id":"themes/next/layout/_partials/search.swig","hash":"7b61e96508df70152b809ea5354236ab7f0d54f4","modified":1489379089000},{"_id":"themes/next/layout/_scripts/baidu-push.swig","hash":"c057b17f79e8261680fbae8dc4e81317a127c799","modified":1489379089000},{"_id":"themes/next/layout/_scripts/boostrap.swig","hash":"03aaebe9d50f6acb007ec38cc04acd1cfceb404d","modified":1489379089000},{"_id":"themes/next/layout/_scripts/commons.swig","hash":"766b2bdda29523ed6cd8d7aa197f996022f8fd94","modified":1489379089000},{"_id":"themes/next/layout/_scripts/vendors.swig","hash":"4512867d80d9eddfc3a0f5fea3c456f33aa9d522","modified":1489379089000},{"_id":"themes/next/scripts/tags/button.js","hash":"62e6dbeb53d07627a048132c79630b45d9a8f2cc","modified":1489379089000},{"_id":"themes/next/scripts/tags/center-quote.js","hash":"535fc542781021c4326dec24d8495cbb1387634a","modified":1489379089000},{"_id":"themes/next/scripts/tags/exturl.js","hash":"79378f3a1cd90518b07808ed09156a3ab55ffa31","modified":1489379089000},{"_id":"themes/next/scripts/tags/full-image.js","hash":"8eeb3fb89540299bdbb799edfdfdac3743b50596","modified":1489379089000},{"_id":"themes/next/scripts/tags/group-pictures.js","hash":"49252824cd53184dc9b97b2f2d87ff28e1b3ef27","modified":1489379089000},{"_id":"themes/next/scripts/tags/note.js","hash":"6752925eedbdb939d8ec4d11bdfb75199f18dd70","modified":1489379089000},{"_id":"themes/next/source/css/main.styl","hash":"20702c48d6053c92c5bcdbc68e8d0ef1369848a0","modified":1489379089000},{"_id":"themes/next/source/images/algolia_logo.svg","hash":"90035272fa31a3f65b3c0e2cb8a633876ef457dc","modified":1489379089000},{"_id":"themes/next/source/images/cc-by-nc-nd.svg","hash":"c6524ece3f8039a5f612feaf865d21ec8a794564","modified":1489379089000},{"_id":"themes/next/source/images/avatar.gif","hash":"264082bb3a1af70d5499c7d22b0902cb454b6d12","modified":1489379089000},{"_id":"themes/next/source/images/cc-by-nc-sa.svg","hash":"3031be41e8753c70508aa88e84ed8f4f653f157e","modified":1489379089000},{"_id":"themes/next/source/images/cc-by-nc.svg","hash":"8d39b39d88f8501c0d27f8df9aae47136ebc59b7","modified":1489379089000},{"_id":"themes/next/source/images/cc-by-nd.svg","hash":"c563508ce9ced1e66948024ba1153400ac0e0621","modified":1489379089000},{"_id":"themes/next/source/images/cc-by-sa.svg","hash":"aa4742d733c8af8d38d4c183b8adbdcab045872e","modified":1489379089000},{"_id":"themes/next/source/images/cc-by.svg","hash":"28a0a4fe355a974a5e42f68031652b76798d4f7e","modified":1489379089000},{"_id":"themes/next/source/images/loading.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1489379089000},{"_id":"themes/next/source/images/cc-zero.svg","hash":"87669bf8ac268a91d027a0a4802c92a1473e9030","modified":1489379089000},{"_id":"themes/next/source/images/placeholder.gif","hash":"5fbd472222feb8a22cf5b8aa5dc5b8e13af88e2b","modified":1489379089000},{"_id":"themes/next/source/images/quote-l.svg","hash":"94e870b4c8c48da61d09522196d4dd40e277a98f","modified":1489379089000},{"_id":"themes/next/source/images/quote-r.svg","hash":"e60ae504f9d99b712c793c3740c6b100d057d4ec","modified":1489379089000},{"_id":"themes/next/source/images/searchicon.png","hash":"67727a6a969be0b2659b908518fa6706eed307b8","modified":1489379089000},{"_id":"themes/next/layout/_scripts/schemes/mist.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379089000},{"_id":"themes/next/layout/_scripts/schemes/muse.swig","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379089000},{"_id":"themes/next/source/css/_mixins/Mist.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379089000},{"_id":"themes/next/source/css/_mixins/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379089000},{"_id":"themes/next/source/css/_mixins/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379089000},{"_id":"themes/next/source/css/_variables/Muse.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379089000},{"_id":"themes/next/source/css/_variables/custom.styl","hash":"da39a3ee5e6b4b0d3255bfef95601890afd80709","modified":1489379089000},{"_id":"themes/next/.git/refs/heads/master","hash":"c53f838cb3001efa97912350a664643ad4aa3285","modified":1489379089000},{"_id":"themes/next/layout/_components/algolia-search/assets.swig","hash":"28ff4ed6714c59124569ffcbd10f1173d53ca923","modified":1489379089000},{"_id":"themes/next/layout/_components/algolia-search/dom.swig","hash":"ba698f49dd3a868c95b240d802f5b1b24ff287e4","modified":1489379089000},{"_id":"themes/next/layout/_partials/head/custom-head.swig","hash":"9e1b9666efa77f4cf8d8261bcfa445a9ac608e53","modified":1489379089000},{"_id":"themes/next/layout/_partials/head/external-fonts.swig","hash":"7ce76358411184482bb0934e70037949dd0da8ca","modified":1489379089000},{"_id":"themes/next/layout/_partials/search/localsearch.swig","hash":"2d1075f4cabcb3956b7b84a8e210f5a66f0a5562","modified":1489379089000},{"_id":"themes/next/layout/_partials/search/swiftype.swig","hash":"959b7e04a96a5596056e4009b73b6489c117597e","modified":1489379089000},{"_id":"themes/next/layout/_partials/search/tinysou.swig","hash":"eefe2388ff3d424694045eda21346989b123977c","modified":1489379089000},{"_id":"themes/next/layout/_partials/share/add-this.swig","hash":"23e23dc0f76ef3c631f24c65277adf7ea517b383","modified":1489379089000},{"_id":"themes/next/layout/_partials/share/baidushare.swig","hash":"1f1107468aaf03f7d0dcd7eb2b653e2813a675b4","modified":1489379089000},{"_id":"themes/next/layout/_partials/share/duoshuo_share.swig","hash":"89c5a5240ecb223acfe1d12377df5562a943fd5d","modified":1489379089000},{"_id":"themes/next/layout/_partials/share/jiathis.swig","hash":"63315fcf210799f894208c9f512737096df84962","modified":1489379089000},{"_id":"themes/next/layout/_scripts/pages/post-details.swig","hash":"069d1357c717572256e5cdee09574ebce529cbae","modified":1489379089000},{"_id":"themes/next/layout/_scripts/schemes/pisces.swig","hash":"a44acf9b0d0f44ef3dfc767376a95c984cc127de","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/analytics.swig","hash":"e46900412e28f529c26e25e6bada342006435a32","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/comments.swig","hash":"a279e1881208aff2f669fe235e9661ab825bc540","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/lean-analytics.swig","hash":"92dc60821307fc9769bea9b2d60adaeb798342af","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/localsearch.swig","hash":"f4dbd4c896e6510ded8ebe05394c28f8a86e71bf","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/mathjax.swig","hash":"6d25596d6a7c57700d37b607f8d9a62d89708683","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/schedule.swig","hash":"22369026c87fc23893c35a7f250b42f3bb1b60f1","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/tinysou.swig","hash":"cb3a5d36dbe1630bab84e03a52733a46df7c219b","modified":1489379089000},{"_id":"themes/next/source/css/_custom/custom.styl","hash":"328d9a9696cc2ccf59c67d3c26000d569f46344c","modified":1489379089000},{"_id":"themes/next/source/css/_mixins/Pisces.styl","hash":"715d5b40dc52f319fe4bff0325beb874774d9bd9","modified":1489379089000},{"_id":"themes/next/source/css/_mixins/base.styl","hash":"78a83c38f69a8747bb74e420e6c9eeef1ea76525","modified":1489379089000},{"_id":"themes/next/source/css/_variables/Mist.styl","hash":"c8d35a6b9e3bff6d8fdb66de853065af9d37562d","modified":1489379089000},{"_id":"themes/next/source/css/_variables/Pisces.styl","hash":"06f432f328a5b8a9ef0dbd5301b002aba600b4ce","modified":1489379089000},{"_id":"themes/next/source/css/_variables/base.styl","hash":"e7c76d93605e2b685274400afe51c55cc651486e","modified":1489379089000},{"_id":"themes/next/source/js/src/affix.js","hash":"978e0422b5bf1b560236d8d10ebc1adcf66392e3","modified":1489379089000},{"_id":"themes/next/source/js/src/algolia-search.js","hash":"b172f697ed339a24b1e80261075232978d164c35","modified":1489379089000},{"_id":"themes/next/source/js/src/bootstrap.js","hash":"aab7be0a6e2724b3faa9338db93c19556c559625","modified":1489379089000},{"_id":"themes/next/source/js/src/exturl.js","hash":"e42e2aaab7bf4c19a0c8e779140e079c6aa5c0b1","modified":1489379089000},{"_id":"themes/next/source/js/src/hook-duoshuo.js","hash":"a6119070c0119f33e08b29da7d2cce2635eb40a0","modified":1489379089000},{"_id":"themes/next/source/js/src/motion.js","hash":"269414e84df544a4ccb88519f6abae4943db3c67","modified":1489379089000},{"_id":"themes/next/source/js/src/post-details.js","hash":"3b2d64c2e6ae072ba2a9ebf7f09908a1543abd58","modified":1489379089000},{"_id":"themes/next/source/js/src/scrollspy.js","hash":"fe4da1b9fe73518226446f5f27d2831e4426fc35","modified":1489379089000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.css","hash":"90ef19edc982645b118b095615838d9c5eaba0de","modified":1489379089000},{"_id":"themes/next/source/js/src/utils.js","hash":"e13c9ccf70d593bdf3b8cc1d768f595abd610e6e","modified":1489379089000},{"_id":"themes/next/source/lib/canvas-nest/canvas-nest.min.js","hash":"0387e75e23b1db108a755073fe52a0d03eb391a7","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/.bower.json","hash":"cc40a9b11e52348e554c84e4a5c058056f6b7aeb","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/.gitattributes","hash":"2db21acfbd457452462f71cc4048a943ee61b8e0","modified":1489379089000},{"_id":"themes/next/source/lib/fastclick/.bower.json","hash":"93ebd5b35e632f714dcf1753e1f6db77ec74449b","modified":1489379089000},{"_id":"themes/next/source/lib/fastclick/README.md","hash":"1decd8e1adad2cd6db0ab50cf56de6035156f4ea","modified":1489379089000},{"_id":"themes/next/source/lib/fastclick/LICENSE","hash":"dcd5b6b43095d9e90353a28b09cb269de8d4838e","modified":1489379089000},{"_id":"themes/next/source/lib/fastclick/bower.json","hash":"13379463c7463b4b96d13556b46faa4cc38d81e6","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/.bower.json","hash":"a2aaaf12378db56bd10596ba3daae30950eac051","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/.gitignore","hash":"69d152fa46b517141ec3b1114dd6134724494d83","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/.npmignore","hash":"dcf470ab3a358103bb896a539cc03caeda10fa8b","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/HELP-US-OUT.txt","hash":"4f7bf961f1bed448f6ba99aeb9219fabf930ba96","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/bower.json","hash":"279a8a718ab6c930a67c41237f0aac166c1b9440","modified":1489379089000},{"_id":"themes/next/source/lib/jquery/.bower.json","hash":"91745c2cc6c946c7275f952b2b0760b880cea69e","modified":1489379089000},{"_id":"themes/next/source/lib/jquery_lazyload/.bower.json","hash":"b7638afc93e9cd350d0783565ee9a7da6805ad8e","modified":1489379089000},{"_id":"themes/next/source/lib/jquery_lazyload/CONTRIBUTING.md","hash":"4891864c24c28efecd81a6a8d3f261145190f901","modified":1489379089000},{"_id":"themes/next/source/lib/jquery_lazyload/README.md","hash":"895d50fa29759af7835256522e9dd7dac597765c","modified":1489379089000},{"_id":"themes/next/source/lib/jquery_lazyload/bower.json","hash":"65bc85d12197e71c40a55c0cd7f6823995a05222","modified":1489379089000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.lazyload.js","hash":"481fd478650e12b67c201a0ea41e92743f8b45a3","modified":1489379089000},{"_id":"themes/next/source/lib/jquery_lazyload/jquery.scrollstop.js","hash":"0e9a81785a011c98be5ea821a8ed7d411818cfd1","modified":1489379089000},{"_id":"themes/next/source/lib/velocity/.bower.json","hash":"05f960846f1c7a93dab1d3f9a1121e86812e8c88","modified":1489379089000},{"_id":"themes/next/source/lib/velocity/bower.json","hash":"2ec99573e84c7117368beccb9e94b6bf35d2db03","modified":1489379089000},{"_id":"themes/next/source/lib/velocity/velocity.min.js","hash":"2f1afadc12e4cf59ef3b405308d21baa97e739c6","modified":1489379089000},{"_id":"themes/next/source/lib/velocity/velocity.ui.js","hash":"6a1d101eab3de87527bb54fcc8c7b36b79d8f0df","modified":1489379089000},{"_id":"themes/next/source/lib/velocity/velocity.ui.min.js","hash":"ed5e534cd680a25d8d14429af824f38a2c7d9908","modified":1489379089000},{"_id":"themes/next/source/lib/jquery/index.js","hash":"41b4bfbaa96be6d1440db6e78004ade1c134e276","modified":1489379089000},{"_id":"themes/next/.git/logs/refs/heads/master","hash":"b629398777180257bd79db8d771e167a2d41bcea","modified":1489379089000},{"_id":"themes/next/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/analytics/application-insights.swig","hash":"60426bf73f8a89ba61fb1be2df3ad5398e32c4ef","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/analytics/baidu-analytics.swig","hash":"deda6a814ed48debc694c4e0c466f06c127163d0","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/analytics/busuanzi-counter.swig","hash":"4fcbf57c4918528ab51d3d042cff92cf5aefb599","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/analytics/cnzz-analytics.swig","hash":"8160b27bee0aa372c7dc7c8476c05bae57f58d0f","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/analytics/facebook-sdk.swig","hash":"394d008e5e94575280407ad8a1607a028026cbc3","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/analytics/google-analytics.swig","hash":"5d9943d74cc2e0a91badcf4f755c6de77eab193a","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-analytics.swig","hash":"3658414379e0e8a34c45c40feadc3edc8dc55f88","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/analytics/tencent-mta.swig","hash":"a652f202bd5b30c648c228ab8f0e997eb4928e44","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/analytics/vkontakte-api.swig","hash":"c3971fd154d781088e1cc665035f8561a4098f4c","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/comments/disqus.swig","hash":"fb1d04ede838b52ca7541973f86c3810f1ad396e","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/comments/duoshuo.swig","hash":"a356b2185d40914447fde817eb3d358ab6b3e4c3","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/comments/gentie.swig","hash":"03592d1d731592103a41ebb87437fe4b0a4c78ca","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/comments/hypercomments.swig","hash":"3e8dc5c6c912628a37e3b5f886bec7b2e5ed14ea","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/comments/livere.swig","hash":"7240f2e5ec7115f8abbbc4c9ef73d4bed180fdc7","modified":1489379089000},{"_id":"themes/next/layout/_scripts/third-party/comments/youyan.swig","hash":"af9dd8a4aed7d06cf47b363eebff48850888566c","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/back-to-top-sidebar.styl","hash":"59ad08bcc6fe9793594869ac2b4c525021453e78","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/back-to-top.styl","hash":"ef089a407c90e58eca10c49bc47ec978f96e03ba","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/buttons.styl","hash":"0dfb4b3ba3180d7285e66f270e1d3fa0f132c3d2","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/comments.styl","hash":"471f1627891aca5c0e1973e09fbcb01e1510d193","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/components.styl","hash":"a6bb5256be6195e76addbda12f4ed7c662d65e7a","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/pagination.styl","hash":"711c8830886619d4f4a0598b0cde5499dce50c62","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/tag-cloud.styl","hash":"dd8a3b22fc2f222ac6e6c05bd8a773fb039169c0","modified":1489379089000},{"_id":"themes/next/source/css/_common/outline/outline.styl","hash":"2186be20e317505cd31886f1291429cc21f76703","modified":1489379089000},{"_id":"themes/next/source/css/_common/scaffolding/base.styl","hash":"7804e31c44717c9a9ddf0f8482b9b9c1a0f74538","modified":1489379089000},{"_id":"themes/next/source/css/_common/scaffolding/helpers.styl","hash":"9c25c75311e1bd4d68df031d3f2ae6d141a90766","modified":1489379089000},{"_id":"themes/next/source/css/_common/scaffolding/normalize.styl","hash":"ece571f38180febaf02ace8187ead8318a300ea7","modified":1489379089000},{"_id":"themes/next/source/css/_common/scaffolding/scaffolding.styl","hash":"013619c472c7e4b08311c464fcbe9fcf5edde603","modified":1489379089000},{"_id":"themes/next/source/css/_common/scaffolding/tables.styl","hash":"64f5d56c08d74a338813df1265580ca0cbf0190b","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Mist/_base.styl","hash":"c2d079788d6fc2e9a191ccdae94e50d55bf849dc","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Mist/_header.styl","hash":"5ae7906dc7c1d9468c7f4b4a6feddddc555797a1","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Mist/_logo.styl","hash":"38e5df90c8689a71c978fd83ba74af3d4e4e5386","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Mist/_menu.styl","hash":"b0dcca862cd0cc6e732e33d975b476d744911742","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Mist/_posts-expanded.styl","hash":"fda14bc35be2e1b332809b55b3d07155a833dbf4","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Mist/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Mist/index.styl","hash":"9a5581a770af8964064fef7afd3e16963e45547f","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Muse/_layout.styl","hash":"0efa036a15c18f5abb058b7c0fad1dd9ac5eed4c","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Muse/_logo.styl","hash":"8829bc556ca38bfec4add4f15a2f028092ac6d46","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Muse/_menu.styl","hash":"82bbaa6322764779a1ac2e2c8390ce901c7972e2","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Muse/_search.styl","hash":"1452cbe674cc1d008e1e9640eb4283841058fc64","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Muse/index.styl","hash":"a0e2030a606c934fb2c5c7373aaae04a1caac4c5","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Pisces/_brand.styl","hash":"c4ed249798296f60bda02351fe6404fb3ef2126f","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Pisces/_layout.styl","hash":"f15537cee1a9ef4fa1e72a1670ebce4097db8115","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Pisces/_menu.styl","hash":"215de948be49bcf14f06d500cef9f7035e406a43","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Pisces/_posts.styl","hash":"2f878213cb24c5ddc18877f6d15ec5c5f57745ac","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Pisces/_sidebar.styl","hash":"e3e23751d4ad24e8714b425d768cf68e37de7ded","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Pisces/index.styl","hash":"69ecd6c97e7cdfd822ac8102b45ad0ede85050db","modified":1489379089000},{"_id":"themes/next/source/js/src/schemes/pisces.js","hash":"79da92119bc246fe05d1626ac98426a83ec90a94","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.css","hash":"5f163444617b6cf267342f06ac166a237bb62df9","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.pack.js","hash":"53360764b429c212f424399384417ccc233bb3be","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/jquery.fancybox.js","hash":"1cf3d47b5ccb7cb6e9019c64f2a88d03a64853e4","modified":1489379089000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.js","hash":"06cef196733a710e77ad7e386ced6963f092dc55","modified":1489379089000},{"_id":"themes/next/source/lib/fastclick/lib/fastclick.min.js","hash":"2cae0f5a6c5d6f3cb993015e6863f9483fc4de18","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css","hash":"0140952c64e3f2b74ef64e050f2fe86eab6624c8","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.css.map","hash":"0189d278706509412bac4745f96c83984e1d59f4","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/css/font-awesome.min.css","hash":"512c7d79033e3028a9be61b540cf1a6870c896f8","modified":1489379089000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.min.js","hash":"38628e75e4412cc6f11074e03e1c6d257aae495b","modified":1489379089000},{"_id":"themes/next/source/lib/ua-parser-js/dist/ua-parser.pack.js","hash":"214dad442a92d36af77ed0ca1d9092b16687f02f","modified":1489379089000},{"_id":"themes/next/.git/objects/pack/pack-e78ae7b4a7936e018b1dd373278ca9682bf2de41.idx","hash":"52b3faffb8a2cbe22436eb98bec05080eca10667","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff","hash":"28b782240b3e76db824e12c02754a9731a167527","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.woff2","hash":"d6f48cba7d076fb6f2fd6ba993a75b9dc1ecbf0c","modified":1489379089000},{"_id":"themes/next/source/lib/velocity/velocity.js","hash":"9f08181baea0cc0e906703b7e5df9111b9ef3373","modified":1489379089000},{"_id":"themes/next/.git/logs/refs/remotes/origin/HEAD","hash":"b629398777180257bd79db8d771e167a2d41bcea","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/footer/footer.styl","hash":"8994ffcce84deac0471532f270f97c44fea54dc0","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/header/header.styl","hash":"ae1ca14e51de67b07dba8f61ec79ee0e2e344574","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/header/headerband.styl","hash":"d27448f199fc2f9980b601bc22b87f08b5d64dd1","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/header/menu.styl","hash":"8a2421cb9005352905fae9d41a847ae56957247e","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/header/site-meta.styl","hash":"6c00f6e0978f4d8f9a846a15579963728aaa6a17","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/header/site-nav.styl","hash":"49c2b2c14a1e7fcc810c6be4b632975d0204c281","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/highlight/diff.styl","hash":"96f32ea6c3265a3889e6abe57587f6e2a2a40dfb","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/highlight/highlight.styl","hash":"755b04edbbfbdd981a783edb09c9cc34cb79cea7","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/highlight/theme.styl","hash":"b76387934fb6bb75212b23c1a194486892cc495e","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/pages/archive.styl","hash":"7778920dd105fa4de3a7ab206eeba30b1a7bac45","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/pages/categories.styl","hash":"4eff5b252d7b614e500fc7d52c97ce325e57d3ab","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/pages/pages.styl","hash":"2039590632bba3943c39319d80ef630af7928185","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/pages/post-detail.styl","hash":"9bf4362a4d0ae151ada84b219d39fbe5bb8c790e","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/pages/schedule.styl","hash":"a82afbb72d83ee394aedc7b37ac0008a9823b4f4","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/post/post-button.styl","hash":"beccb53dcd658136fb91a0c5678dea8f37d6e0b6","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/post/post-collapse.styl","hash":"8fae54591877a73dff0b29b2be2e8935e3c63575","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/post/post-eof.styl","hash":"2cdc094ecf907a02fce25ad4a607cd5c40da0f2b","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/post/post-expand.styl","hash":"b25132fe6a7ad67059a2c3afc60feabb479bdd75","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/post/post-gallery.styl","hash":"387ce23bba52b22a586b2dfb4ec618fe1ffd3926","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/post/post-meta.styl","hash":"b9a2e76f019a5941191f1263b54aef7b69c48789","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/post/post-nav.styl","hash":"a5d8617a24d7cb6c5ad91ea621183ca2c0917331","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/post/post-reward.styl","hash":"e792c8dc41561c96d128e9b421187f1c3dc978a0","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/post/post-tags.styl","hash":"a352ae5b1f8857393bf770d2e638bf15f0c9585d","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/post/post-title.styl","hash":"963105a531403d7aad6d9e5e23e3bfabb8ec065a","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/post/post-type.styl","hash":"10251257aceecb117233c9554dcf8ecfef8e2104","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/post/post.styl","hash":"bfd806d0a9f21446a22df82ac02e37d0075cc3b5","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author-links.styl","hash":"2e7ec9aaa3293941106b1bdd09055246aa3c3dc6","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-author.styl","hash":"920343e41c124221a17f050bbb989494d44f7a24","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-blogroll.styl","hash":"5f6ea57aabfa30a437059bf8352f1ad829dbd4ff","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-feed-link.styl","hash":"9486ddd2cb255227db102d09a7df4cae0fabad72","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-nav.styl","hash":"45fa7193435a8eae9960267438750b4c9fa9587f","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toc.styl","hash":"7690b9596ec3a49befbe529a5a2649abec0faf76","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar-toggle.styl","hash":"a2ec22ef4a6817bbb2abe8660fcd99fe4ca0cc5e","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/sidebar/sidebar.styl","hash":"234facd038f144bd0fe09a31ed1357c5d74c517f","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/sidebar/site-state.styl","hash":"3623e7fa4324ec1307370f33d8f287a9e20a5578","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/tags/blockquote-center.styl","hash":"c2abe4d87148e23e15d49ee225bc650de60baf46","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/tags/exturl.styl","hash":"1b3cc9f4e5a7f6e05b4100e9990b37b20d4a2005","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/tags/full-image.styl","hash":"b8969e1654eec89a0fd10d88b337fee9cb03cd44","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/tags/group-pictures.styl","hash":"4851b981020c5cbc354a1af9b831a2dcb3cf9d39","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/tags/note.styl","hash":"74d0ba86f698165d13402670382a822c8736a556","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/tags/tags.styl","hash":"8fe1e55bc290e6aaf07cc644fe27b62107a272a8","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/third-party/algolia-search.styl","hash":"fd42777b9125fd8969dc39d4f15473e2b91b4142","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/third-party/baidushare.styl","hash":"93b08815c4d17e2b96fef8530ec1f1064dede6ef","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/third-party/busuanzi-counter.styl","hash":"d4e6d8d7b34dc69994593c208f875ae8f7e8a3ae","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/third-party/duoshuo.styl","hash":"2340dd9b3202c61d73cc708b790fac5adddbfc7f","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/third-party/gentie.styl","hash":"586a3ec0f1015e7207cd6a2474362e068c341744","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/third-party/jiathis.styl","hash":"327b5f63d55ec26f7663185c1a778440588d9803","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/third-party/localsearch.styl","hash":"173490e21bece35a34858e8e534cf86e34561350","modified":1489379089000},{"_id":"themes/next/source/css/_common/components/third-party/third-party.styl","hash":"42348219db93a85d2ee23cb06cebd4d8ab121726","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Mist/outline/outline.styl","hash":"5dc4859c66305f871e56cba78f64bfe3bf1b5f01","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Mist/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1489379089000},{"_id":"themes/next/source/css/_schemes/Muse/sidebar/sidebar-blogroll.styl","hash":"817587e46df49e819858c8ecbafa08b53d5ff040","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-buttons.js","hash":"91e41741c2e93f732c82aaacec4cfc6e3f3ec876","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-media.js","hash":"3bdf69ed2469e4fb57f5a95f17300eef891ff90d","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1489379089000},{"_id":"themes/next/source/lib/fancybox/source/helpers/jquery.fancybox-thumbs.js","hash":"53e194f4a72e649c04fb586dd57762b8c022800b","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/fonts/FontAwesome.otf","hash":"048707bc52ac4b6563aaa383bfe8660a0ddc908c","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.eot","hash":"d980c2ce873dc43af460d4d572d441304499f400","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.ttf","hash":"13b1eab65a983c7a73bc7997c479d66943f7c6cb","modified":1489379089000},{"_id":"themes/next/source/lib/algolia-instant-search/instantsearch.min.js","hash":"9ccc6f8144f54e86df9a3fd33a18368d81cf3a4f","modified":1489379089000},{"_id":"themes/next/source/lib/font-awesome/fonts/fontawesome-webfont.svg","hash":"98a8aa5cf7d62c2eff5f07ede8d844b874ef06ed","modified":1489379089000},{"_id":"themes/next/.git/objects/pack/pack-e78ae7b4a7936e018b1dd373278ca9682bf2de41.pack","hash":"e7006b541feb24f2780bf03399cd769942041dea","modified":1489379089000}],"Category":[{"name":"个人成长","_id":"cj07m5see0006r6xl7dohmt57"},{"name":"HTML5学习笔记","_id":"cj07m5seo000er6xlls64vr7m"},{"name":"javascript","_id":"cj07m5seq000jr6xlbbrqzcnl"},{"name":"代码版本控制","_id":"cj07m5ser000mr6xlwhjao4ax"},{"name":"网络","_id":"cj07m5sf3001cr6xlo179btyy"}],"Data":[],"Page":[{"_content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"https://xujiao1989.github.io/blog/\"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n","source":"404.html","raw":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"https://xujiao1989.github.io/blog/\"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n","date":"2017-03-13T00:32:30.000Z","updated":"2017-03-13T00:32:30.000Z","path":"404.html","title":"","comments":1,"layout":"page","_id":"cj07m5sdq0000r6xl9feaxsh7","content":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\">\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\">\n  <meta name=\"robots\" content=\"all\">\n  <meta name=\"robots\" content=\"index,follow\">\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\" charset=\"utf-8\" homepageurl=\"https://xujiao1989.github.io/blog/\" homepagename=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n","excerpt":"","more":"<!DOCTYPE HTML>\n<html>\n<head>\n  <meta http-equiv=\"content-type\" content=\"text/html;charset=utf-8;\"/>\n  <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge,chrome=1\" />\n  <meta name=\"robots\" content=\"all\" />\n  <meta name=\"robots\" content=\"index,follow\"/>\n</head>\n<body>\n\n<script type=\"text/javascript\" src=\"http://www.qq.com/404/search_children.js\"\n        charset=\"utf-8\" homePageUrl=\"https://xujiao1989.github.io/blog/\"\n        homePageName=\"回到我的主页\">\n</script>\n\n</body>\n</html>\n"},{"title":"about","date":"2017-01-13T11:51:53.000Z","type":"about","comments":0,"_content":"\n大家好我是徐姣\n","source":"about/index.md","raw":"---\ntitle: about\ndate: 2017-01-13 19:51:53\ntype: \"about\"\ncomments: false\n---\n\n大家好我是徐姣\n","updated":"2017-03-13T00:32:30.000Z","path":"about/index.html","layout":"page","_id":"cj07m5sdy0001r6xl759mmyaw","content":"<p>大家好我是徐姣</p>\n","excerpt":"","more":"<p>大家好我是徐姣</p>\n"},{"title":"categories","date":"2017-01-13T11:50:25.000Z","type":"categories","comments":0,"_content":"","source":"categories/index.md","raw":"---\ntitle: categories\ndate: 2017-01-13 19:50:25\ntype: \"categories\"\ncomments: false\n---\n","updated":"2017-03-13T00:32:30.000Z","path":"categories/index.html","layout":"page","_id":"cj07m5sdz0002r6xl0ew1a4wl","content":"","excerpt":"","more":""},{"title":"tags","date":"2017-01-13T11:47:58.000Z","type":"tags","comments":0,"_content":"","source":"tags/index.md","raw":"---\ntitle: tags\ndate: 2017-01-13 19:47:58\ntype: \"tags\"\ncomments: false\n---\n","updated":"2017-03-13T00:32:30.000Z","path":"tags/index.html","layout":"page","_id":"cj07m5se20003r6xl1tiylr4l","content":"","excerpt":"","more":""}],"Post":[{"title":"2017个人规划","date":"2017-01-13T14:48:53.000Z","_content":"\n> 种树最好的时间不是10年前，而是现在！那么从现在开始，要给自己的2017一个规划，每天都要有成长！\n\n\n没有清楚的自身定位,才会在做选择的时候犹豫,才会经常迷茫,需要向别人求助。\n\n\n之前的一年里没有系统的知识管理，一直零零散散的记录不成体系。接下来的17年给自己一个新的规划，有计划有体系的成长。\n\n毕业也快2年了，如果3年内知识结构缺口很大的话，很快会被淘汰，要有危机意识。\n\n\n## 知识管理\n\n+ 有道云笔记\n\n\t主要用来收藏一些网上比较好的文章\n+ 个人博客\n\n\t用于平时看书和看文章的总结\n+ 笔记本\n\n\t小笔记本的话用来每天记录一下易错或想要记住的小知识点。每天看一下。\n\t\n\t\n## 前端知识结构的搭建\n\n\n2017年3月开始，搭建如下知识体系。有红旗标志的表示已完成\n\n![2017前端知识体系构建](/images/fe.jpg)\n\n\n## 关于健身\n\n对于自己的健康管理也要提上日程,继续去年的打卡计划。这块需要等3月份工作稳定下来执行。\n\n目前体重56KG,目标体重51KG,科学减肥,不节食。\n\n相比于减少体重,更重要的是体型的管理,各部分线条训练,增肌。\n\n\n## 鸡汤\n\n做个会思考的人~","source":"_posts/个人成长/2017-01-13-plan.md","raw":"---\ntitle: 2017个人规划\ndate: 2017-01-13 22:48:53\ntags:\n  - 前端开发\n  - 个人成长\ncategories: 个人成长\n---\n\n> 种树最好的时间不是10年前，而是现在！那么从现在开始，要给自己的2017一个规划，每天都要有成长！\n\n\n没有清楚的自身定位,才会在做选择的时候犹豫,才会经常迷茫,需要向别人求助。\n\n\n之前的一年里没有系统的知识管理，一直零零散散的记录不成体系。接下来的17年给自己一个新的规划，有计划有体系的成长。\n\n毕业也快2年了，如果3年内知识结构缺口很大的话，很快会被淘汰，要有危机意识。\n\n\n## 知识管理\n\n+ 有道云笔记\n\n\t主要用来收藏一些网上比较好的文章\n+ 个人博客\n\n\t用于平时看书和看文章的总结\n+ 笔记本\n\n\t小笔记本的话用来每天记录一下易错或想要记住的小知识点。每天看一下。\n\t\n\t\n## 前端知识结构的搭建\n\n\n2017年3月开始，搭建如下知识体系。有红旗标志的表示已完成\n\n![2017前端知识体系构建](/images/fe.jpg)\n\n\n## 关于健身\n\n对于自己的健康管理也要提上日程,继续去年的打卡计划。这块需要等3月份工作稳定下来执行。\n\n目前体重56KG,目标体重51KG,科学减肥,不节食。\n\n相比于减少体重,更重要的是体型的管理,各部分线条训练,增肌。\n\n\n## 鸡汤\n\n做个会思考的人~","slug":"个人成长/2017-01-13-plan","published":1,"updated":"2017-03-13T00:32:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj07m5se50004r6xlejn73abq","content":"<blockquote>\n<p>种树最好的时间不是10年前，而是现在！那么从现在开始，要给自己的2017一个规划，每天都要有成长！</p>\n</blockquote>\n<p>没有清楚的自身定位,才会在做选择的时候犹豫,才会经常迷茫,需要向别人求助。</p>\n<p>之前的一年里没有系统的知识管理，一直零零散散的记录不成体系。接下来的17年给自己一个新的规划，有计划有体系的成长。</p>\n<p>毕业也快2年了，如果3年内知识结构缺口很大的话，很快会被淘汰，要有危机意识。</p>\n<h2 id=\"知识管理\"><a href=\"#知识管理\" class=\"headerlink\" title=\"知识管理\"></a>知识管理</h2><ul>\n<li><p>有道云笔记</p>\n<p>  主要用来收藏一些网上比较好的文章</p>\n</li>\n<li><p>个人博客</p>\n<p>  用于平时看书和看文章的总结</p>\n</li>\n<li><p>笔记本</p>\n<p>  小笔记本的话用来每天记录一下易错或想要记住的小知识点。每天看一下。</p>\n</li>\n</ul>\n<h2 id=\"前端知识结构的搭建\"><a href=\"#前端知识结构的搭建\" class=\"headerlink\" title=\"前端知识结构的搭建\"></a>前端知识结构的搭建</h2><p>2017年3月开始，搭建如下知识体系。有红旗标志的表示已完成</p>\n<p><img src=\"/images/fe.jpg\" alt=\"2017前端知识体系构建\"></p>\n<h2 id=\"关于健身\"><a href=\"#关于健身\" class=\"headerlink\" title=\"关于健身\"></a>关于健身</h2><p>对于自己的健康管理也要提上日程,继续去年的打卡计划。这块需要等3月份工作稳定下来执行。</p>\n<p>目前体重56KG,目标体重51KG,科学减肥,不节食。</p>\n<p>相比于减少体重,更重要的是体型的管理,各部分线条训练,增肌。</p>\n<h2 id=\"鸡汤\"><a href=\"#鸡汤\" class=\"headerlink\" title=\"鸡汤\"></a>鸡汤</h2><p>做个会思考的人~</p>\n","excerpt":"","more":"<blockquote>\n<p>种树最好的时间不是10年前，而是现在！那么从现在开始，要给自己的2017一个规划，每天都要有成长！</p>\n</blockquote>\n<p>没有清楚的自身定位,才会在做选择的时候犹豫,才会经常迷茫,需要向别人求助。</p>\n<p>之前的一年里没有系统的知识管理，一直零零散散的记录不成体系。接下来的17年给自己一个新的规划，有计划有体系的成长。</p>\n<p>毕业也快2年了，如果3年内知识结构缺口很大的话，很快会被淘汰，要有危机意识。</p>\n<h2 id=\"知识管理\"><a href=\"#知识管理\" class=\"headerlink\" title=\"知识管理\"></a>知识管理</h2><ul>\n<li><p>有道云笔记</p>\n<p>  主要用来收藏一些网上比较好的文章</p>\n</li>\n<li><p>个人博客</p>\n<p>  用于平时看书和看文章的总结</p>\n</li>\n<li><p>笔记本</p>\n<p>  小笔记本的话用来每天记录一下易错或想要记住的小知识点。每天看一下。</p>\n</li>\n</ul>\n<h2 id=\"前端知识结构的搭建\"><a href=\"#前端知识结构的搭建\" class=\"headerlink\" title=\"前端知识结构的搭建\"></a>前端知识结构的搭建</h2><p>2017年3月开始，搭建如下知识体系。有红旗标志的表示已完成</p>\n<p><img src=\"/images/fe.jpg\" alt=\"2017前端知识体系构建\"></p>\n<h2 id=\"关于健身\"><a href=\"#关于健身\" class=\"headerlink\" title=\"关于健身\"></a>关于健身</h2><p>对于自己的健康管理也要提上日程,继续去年的打卡计划。这块需要等3月份工作稳定下来执行。</p>\n<p>目前体重56KG,目标体重51KG,科学减肥,不节食。</p>\n<p>相比于减少体重,更重要的是体型的管理,各部分线条训练,增肌。</p>\n<h2 id=\"鸡汤\"><a href=\"#鸡汤\" class=\"headerlink\" title=\"鸡汤\"></a>鸡汤</h2><p>做个会思考的人~</p>\n"},{"title":"前端资料总结","date":"2017-02-20T16:00:00.000Z","_content":"\n\n## 移动端\n\n+ [js中flexible.js实现淘宝弹性布局方案](http://www.jb51.net/article/76893.htm)\n+ [Zepto中文API](http://www.bootcss.com/p/zeptojs/)\n+ [从淘宝适配布局谈移动端适配](http://www.qdfuns.com/notes/23659/5e3cd2904a56f5e6b86c4d49e90e0f34.html?winzoom=1)\n\n\n## HTML\n\n+ [HTML5的文档节段和纲要](https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/Sections_and_Outlines_of_an_HTML5_document)\n+ [HTML占位符对照表](http://tool.oschina.net/commons?type=2)\n\n\n## JS\n\n+ [ECMAScript 6 入门](http://es6.ruanyifeng.com/)\n+ [js插件编写规范](http://www.cnblogs.com/fingerdancing/archive/2013/04/30/jsPlugin.html)\n+ [jQuery插件开发入门](http://www.css88.com/archives/4821)\n+ [gulp编写插件](http://www.gulpjs.com.cn/docs/writing-a-plugin/)\n+ [jQuery插件开发入门](http://www.css88.com/archives/4821)\n+ [gulpjs官网](http://www.gulpjs.com.cn/)\n+ [EcmaScript5.1](http://lzw.me/pages/ecmascript/)\n+ [https://segmentfault.com/a/1190000005128101](https://segmentfault.com/a/1190000005128101)\n+ [gulp学习资料整理](https://github.com/Platform-CUF/use-gulp)\n+ [webpack中文指南](http://webpackdoc.com/)\n\n### 模块化\n+ [CommonJS 模块规范 1.1.1](http://www.cnblogs.com/ifantastic/p/4648329.html)\n+ [使用 AMD、CommonJS 及 ES Harmony 编写模块化的 JavaScript](http://justineo.github.io/singles/writing-modular-js/)\n+ [why amd](http://requirejs.org/docs/whyamd.html)\n+ [浏览器加载 CommonJS 模块的原理与实现](http://www.ruanyifeng.com/blog/2015/05/commonjs-in-browser.html)\n+ [JavaSript模块规范 - AMD规范与CMD规范介绍 ](http://blog.chinaunix.net/uid-26672038-id-4112229.html)\n\n\n\n## 浏览器\n\n+ [从输入 URL 到页面加载完成的过程中都发生了什么事情？](http://fex.baidu.com/blog/2014/05/what-happen/?qq-pf-to=pcqq.c2c)\n+ [Chrome 开发者工具中文指南](http://www.jianshu.com/p/cf36d48652f4)\n+ [How Rendering Work (in WebKit and Blink)](http://blog.csdn.net/rogeryi/article/details/23686609)\n+ [浏览器渲染发展的一些思考](http://blog.csdn.net/rogeryi/article/details/17657779)\n+ [Chromium网页Render Object Tree创建过程分析](http://blog.csdn.net/luoshengyang/article/details/50615628)\n+ [Chromium网页Render Layer Tree创建过程分析](http://blog.csdn.net/luoshengyang/article/details/50648792)\n+ [Chromium网页Graphics Layer Tree创建过程分析](http://blog.csdn.net/luoshengyang/article/details/50661553)\n\n\n\n## React\n\n+ [RN中文网](http://reactnative.cn/)\n\n## node\n\n+ [nodeschool](http://nodeschool.io/zh-cn/)\n+ [如何系统地学习Node.js？](https://www.zhihu.com/question/21567720)\n+ [node-interview-questions](https://github.com/jimuyouyou/node-interview-questions#%E8%B5%B7%E6%BA%90)\n+ [Node.js 教程](http://www.runoob.com/nodejs/nodejs-tutorial.html)\n+ [express API](http://expressjs.jser.us/api)\n+ [Mongoose学习参考文档](https://cnodejs.org/topic/504b4924e2b84515770103dd)\n+ [8天学通MongoDB——第一天 基础入门](http://www.cnblogs.com/huangxincheng/archive/2012/02/18/2356595.html)\n+ [在express站点中使用ejs模板引擎](http://www.cnblogs.com/xuanhun/p/3922847.html)\n\n\n\n## CSS\n+ [bootcss](http://www.bootcss.com/)\n+ [WEB安全色](http://www.bootcss.com/p/websafecolors/)\n\n## 个人\n\n+ [github](https://github.com/xujiao1989)\n+ [个人博客](http://www.xujiaosite.com/)\n\n\n## 其他\n\n+ [淘宝 NPM 镜像](http://npm.taobao.org/)\n+ [leetcode](https://leetcode.com/)\n+ [can i use](http://caniuse.com/)\n+ [阿里巴巴的iconfont](http://www.iconfont.cn/plus)\n\n## 图片素材\n+ [千图网](http://www.58pic.com/)\n+ [千库网](http://588ku.com/?h=bd)\n\n### 博客搭建\n\n+ [NexT使用文档](http://theme-next.iissnan.com/)\n+ [如何搭建一个独立博客——简明Github Pages与Hexo教程](http://www.jianshu.com/p/05289a4bc8b2)\n+ [手把手教你使用Hexo + Github Pages搭建个人独立博客](https://segmentfault.com/a/1190000004947261)\n+ [为NexT主题添加文章阅读量统计功能](https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud)\n+ [godaddy域名购买](https://cart.godaddy.com/EmptyCart.aspx?isc=cjc2off30)\n+ [DNS注册](https://www.dnspod.cn/Login)\n\n\n\n## 牛人博客\n\n+ [Haorooms](http://www.haorooms.com/)\n+ [前端网址导航](http://www.whycss.com/)\n+ [廖雪峰的官方网站](http://www.liaoxuefeng.com/)\n+ [前端网址导航](http://www.whycss.com/)\n+ [Haorooms](http://www.haorooms.com/)\n+ [前端网址导航](http://www.whycss.com/)\n+ [前端网](http://www.qdfuns.com/)\n+ [百度FEX](http://fex.baidu.com/)\n+ [美团FE博客](http://fe.meituan.com/)\n+ [YUI3在美团的实践](http://fe.meituan.com/yui3-practice.html)\n+ [scrat的webapp模块化开发体系](http://scrat.io/#!/index)\n+ [阮一峰个人博客](http://www.ruanyifeng.com/home.html)\n+ [史蒂夫周-mac软件破解](http://www.sdifenzhou.com/)\n+ [妙味课堂](http://2017.miaov.com/)\n+ [百度FEX](http://fex.baidu.com/)\n+ [玉伯的博客](https://lifesinger.wordpress.com/)\n+ [好用的工具导航](https://blog.thankbabe.com/collection/)\n\n\n","source":"_posts/个人成长/前端资料总结.md","raw":"---\ntitle: 前端资料总结\ndate: 2017-02-21 \ntags:\n  - 前端开发\n  - 前端资料总结\n  - JavaScript、HTML、CSS、Node\ncategories: 个人成长\n---\n\n\n## 移动端\n\n+ [js中flexible.js实现淘宝弹性布局方案](http://www.jb51.net/article/76893.htm)\n+ [Zepto中文API](http://www.bootcss.com/p/zeptojs/)\n+ [从淘宝适配布局谈移动端适配](http://www.qdfuns.com/notes/23659/5e3cd2904a56f5e6b86c4d49e90e0f34.html?winzoom=1)\n\n\n## HTML\n\n+ [HTML5的文档节段和纲要](https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/Sections_and_Outlines_of_an_HTML5_document)\n+ [HTML占位符对照表](http://tool.oschina.net/commons?type=2)\n\n\n## JS\n\n+ [ECMAScript 6 入门](http://es6.ruanyifeng.com/)\n+ [js插件编写规范](http://www.cnblogs.com/fingerdancing/archive/2013/04/30/jsPlugin.html)\n+ [jQuery插件开发入门](http://www.css88.com/archives/4821)\n+ [gulp编写插件](http://www.gulpjs.com.cn/docs/writing-a-plugin/)\n+ [jQuery插件开发入门](http://www.css88.com/archives/4821)\n+ [gulpjs官网](http://www.gulpjs.com.cn/)\n+ [EcmaScript5.1](http://lzw.me/pages/ecmascript/)\n+ [https://segmentfault.com/a/1190000005128101](https://segmentfault.com/a/1190000005128101)\n+ [gulp学习资料整理](https://github.com/Platform-CUF/use-gulp)\n+ [webpack中文指南](http://webpackdoc.com/)\n\n### 模块化\n+ [CommonJS 模块规范 1.1.1](http://www.cnblogs.com/ifantastic/p/4648329.html)\n+ [使用 AMD、CommonJS 及 ES Harmony 编写模块化的 JavaScript](http://justineo.github.io/singles/writing-modular-js/)\n+ [why amd](http://requirejs.org/docs/whyamd.html)\n+ [浏览器加载 CommonJS 模块的原理与实现](http://www.ruanyifeng.com/blog/2015/05/commonjs-in-browser.html)\n+ [JavaSript模块规范 - AMD规范与CMD规范介绍 ](http://blog.chinaunix.net/uid-26672038-id-4112229.html)\n\n\n\n## 浏览器\n\n+ [从输入 URL 到页面加载完成的过程中都发生了什么事情？](http://fex.baidu.com/blog/2014/05/what-happen/?qq-pf-to=pcqq.c2c)\n+ [Chrome 开发者工具中文指南](http://www.jianshu.com/p/cf36d48652f4)\n+ [How Rendering Work (in WebKit and Blink)](http://blog.csdn.net/rogeryi/article/details/23686609)\n+ [浏览器渲染发展的一些思考](http://blog.csdn.net/rogeryi/article/details/17657779)\n+ [Chromium网页Render Object Tree创建过程分析](http://blog.csdn.net/luoshengyang/article/details/50615628)\n+ [Chromium网页Render Layer Tree创建过程分析](http://blog.csdn.net/luoshengyang/article/details/50648792)\n+ [Chromium网页Graphics Layer Tree创建过程分析](http://blog.csdn.net/luoshengyang/article/details/50661553)\n\n\n\n## React\n\n+ [RN中文网](http://reactnative.cn/)\n\n## node\n\n+ [nodeschool](http://nodeschool.io/zh-cn/)\n+ [如何系统地学习Node.js？](https://www.zhihu.com/question/21567720)\n+ [node-interview-questions](https://github.com/jimuyouyou/node-interview-questions#%E8%B5%B7%E6%BA%90)\n+ [Node.js 教程](http://www.runoob.com/nodejs/nodejs-tutorial.html)\n+ [express API](http://expressjs.jser.us/api)\n+ [Mongoose学习参考文档](https://cnodejs.org/topic/504b4924e2b84515770103dd)\n+ [8天学通MongoDB——第一天 基础入门](http://www.cnblogs.com/huangxincheng/archive/2012/02/18/2356595.html)\n+ [在express站点中使用ejs模板引擎](http://www.cnblogs.com/xuanhun/p/3922847.html)\n\n\n\n## CSS\n+ [bootcss](http://www.bootcss.com/)\n+ [WEB安全色](http://www.bootcss.com/p/websafecolors/)\n\n## 个人\n\n+ [github](https://github.com/xujiao1989)\n+ [个人博客](http://www.xujiaosite.com/)\n\n\n## 其他\n\n+ [淘宝 NPM 镜像](http://npm.taobao.org/)\n+ [leetcode](https://leetcode.com/)\n+ [can i use](http://caniuse.com/)\n+ [阿里巴巴的iconfont](http://www.iconfont.cn/plus)\n\n## 图片素材\n+ [千图网](http://www.58pic.com/)\n+ [千库网](http://588ku.com/?h=bd)\n\n### 博客搭建\n\n+ [NexT使用文档](http://theme-next.iissnan.com/)\n+ [如何搭建一个独立博客——简明Github Pages与Hexo教程](http://www.jianshu.com/p/05289a4bc8b2)\n+ [手把手教你使用Hexo + Github Pages搭建个人独立博客](https://segmentfault.com/a/1190000004947261)\n+ [为NexT主题添加文章阅读量统计功能](https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud)\n+ [godaddy域名购买](https://cart.godaddy.com/EmptyCart.aspx?isc=cjc2off30)\n+ [DNS注册](https://www.dnspod.cn/Login)\n\n\n\n## 牛人博客\n\n+ [Haorooms](http://www.haorooms.com/)\n+ [前端网址导航](http://www.whycss.com/)\n+ [廖雪峰的官方网站](http://www.liaoxuefeng.com/)\n+ [前端网址导航](http://www.whycss.com/)\n+ [Haorooms](http://www.haorooms.com/)\n+ [前端网址导航](http://www.whycss.com/)\n+ [前端网](http://www.qdfuns.com/)\n+ [百度FEX](http://fex.baidu.com/)\n+ [美团FE博客](http://fe.meituan.com/)\n+ [YUI3在美团的实践](http://fe.meituan.com/yui3-practice.html)\n+ [scrat的webapp模块化开发体系](http://scrat.io/#!/index)\n+ [阮一峰个人博客](http://www.ruanyifeng.com/home.html)\n+ [史蒂夫周-mac软件破解](http://www.sdifenzhou.com/)\n+ [妙味课堂](http://2017.miaov.com/)\n+ [百度FEX](http://fex.baidu.com/)\n+ [玉伯的博客](https://lifesinger.wordpress.com/)\n+ [好用的工具导航](https://blog.thankbabe.com/collection/)\n\n\n","slug":"个人成长/前端资料总结","published":1,"updated":"2017-03-13T00:32:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj07m5sea0005r6xlvvdsztha","content":"<h2 id=\"移动端\"><a href=\"#移动端\" class=\"headerlink\" title=\"移动端\"></a>移动端</h2><ul>\n<li><a href=\"http://www.jb51.net/article/76893.htm\" target=\"_blank\" rel=\"external\">js中flexible.js实现淘宝弹性布局方案</a></li>\n<li><a href=\"http://www.bootcss.com/p/zeptojs/\" target=\"_blank\" rel=\"external\">Zepto中文API</a></li>\n<li><a href=\"http://www.qdfuns.com/notes/23659/5e3cd2904a56f5e6b86c4d49e90e0f34.html?winzoom=1\" target=\"_blank\" rel=\"external\">从淘宝适配布局谈移动端适配</a></li>\n</ul>\n<h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/Sections_and_Outlines_of_an_HTML5_document\" target=\"_blank\" rel=\"external\">HTML5的文档节段和纲要</a></li>\n<li><a href=\"http://tool.oschina.net/commons?type=2\" target=\"_blank\" rel=\"external\">HTML占位符对照表</a></li>\n</ul>\n<h2 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h2><ul>\n<li><a href=\"http://es6.ruanyifeng.com/\" target=\"_blank\" rel=\"external\">ECMAScript 6 入门</a></li>\n<li><a href=\"http://www.cnblogs.com/fingerdancing/archive/2013/04/30/jsPlugin.html\" target=\"_blank\" rel=\"external\">js插件编写规范</a></li>\n<li><a href=\"http://www.css88.com/archives/4821\" target=\"_blank\" rel=\"external\">jQuery插件开发入门</a></li>\n<li><a href=\"http://www.gulpjs.com.cn/docs/writing-a-plugin/\" target=\"_blank\" rel=\"external\">gulp编写插件</a></li>\n<li><a href=\"http://www.css88.com/archives/4821\" target=\"_blank\" rel=\"external\">jQuery插件开发入门</a></li>\n<li><a href=\"http://www.gulpjs.com.cn/\" target=\"_blank\" rel=\"external\">gulpjs官网</a></li>\n<li><a href=\"http://lzw.me/pages/ecmascript/\" target=\"_blank\" rel=\"external\">EcmaScript5.1</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000005128101\" target=\"_blank\" rel=\"external\">https://segmentfault.com/a/1190000005128101</a></li>\n<li><a href=\"https://github.com/Platform-CUF/use-gulp\" target=\"_blank\" rel=\"external\">gulp学习资料整理</a></li>\n<li><a href=\"http://webpackdoc.com/\" target=\"_blank\" rel=\"external\">webpack中文指南</a></li>\n</ul>\n<h3 id=\"模块化\"><a href=\"#模块化\" class=\"headerlink\" title=\"模块化\"></a>模块化</h3><ul>\n<li><a href=\"http://www.cnblogs.com/ifantastic/p/4648329.html\" target=\"_blank\" rel=\"external\">CommonJS 模块规范 1.1.1</a></li>\n<li><a href=\"http://justineo.github.io/singles/writing-modular-js/\" target=\"_blank\" rel=\"external\">使用 AMD、CommonJS 及 ES Harmony 编写模块化的 JavaScript</a></li>\n<li><a href=\"http://requirejs.org/docs/whyamd.html\" target=\"_blank\" rel=\"external\">why amd</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/05/commonjs-in-browser.html\" target=\"_blank\" rel=\"external\">浏览器加载 CommonJS 模块的原理与实现</a></li>\n<li><a href=\"http://blog.chinaunix.net/uid-26672038-id-4112229.html\" target=\"_blank\" rel=\"external\">JavaSript模块规范 - AMD规范与CMD规范介绍 </a></li>\n</ul>\n<h2 id=\"浏览器\"><a href=\"#浏览器\" class=\"headerlink\" title=\"浏览器\"></a>浏览器</h2><ul>\n<li><a href=\"http://fex.baidu.com/blog/2014/05/what-happen/?qq-pf-to=pcqq.c2c\" target=\"_blank\" rel=\"external\">从输入 URL 到页面加载完成的过程中都发生了什么事情？</a></li>\n<li><a href=\"http://www.jianshu.com/p/cf36d48652f4\" target=\"_blank\" rel=\"external\">Chrome 开发者工具中文指南</a></li>\n<li><a href=\"http://blog.csdn.net/rogeryi/article/details/23686609\" target=\"_blank\" rel=\"external\">How Rendering Work (in WebKit and Blink)</a></li>\n<li><a href=\"http://blog.csdn.net/rogeryi/article/details/17657779\" target=\"_blank\" rel=\"external\">浏览器渲染发展的一些思考</a></li>\n<li><a href=\"http://blog.csdn.net/luoshengyang/article/details/50615628\" target=\"_blank\" rel=\"external\">Chromium网页Render Object Tree创建过程分析</a></li>\n<li><a href=\"http://blog.csdn.net/luoshengyang/article/details/50648792\" target=\"_blank\" rel=\"external\">Chromium网页Render Layer Tree创建过程分析</a></li>\n<li><a href=\"http://blog.csdn.net/luoshengyang/article/details/50661553\" target=\"_blank\" rel=\"external\">Chromium网页Graphics Layer Tree创建过程分析</a></li>\n</ul>\n<h2 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h2><ul>\n<li><a href=\"http://reactnative.cn/\" target=\"_blank\" rel=\"external\">RN中文网</a></li>\n</ul>\n<h2 id=\"node\"><a href=\"#node\" class=\"headerlink\" title=\"node\"></a>node</h2><ul>\n<li><a href=\"http://nodeschool.io/zh-cn/\" target=\"_blank\" rel=\"external\">nodeschool</a></li>\n<li><a href=\"https://www.zhihu.com/question/21567720\" target=\"_blank\" rel=\"external\">如何系统地学习Node.js？</a></li>\n<li><a href=\"https://github.com/jimuyouyou/node-interview-questions#%E8%B5%B7%E6%BA%90\" target=\"_blank\" rel=\"external\">node-interview-questions</a></li>\n<li><a href=\"http://www.runoob.com/nodejs/nodejs-tutorial.html\" target=\"_blank\" rel=\"external\">Node.js 教程</a></li>\n<li><a href=\"http://expressjs.jser.us/api\" target=\"_blank\" rel=\"external\">express API</a></li>\n<li><a href=\"https://cnodejs.org/topic/504b4924e2b84515770103dd\" target=\"_blank\" rel=\"external\">Mongoose学习参考文档</a></li>\n<li><a href=\"http://www.cnblogs.com/huangxincheng/archive/2012/02/18/2356595.html\" target=\"_blank\" rel=\"external\">8天学通MongoDB——第一天 基础入门</a></li>\n<li><a href=\"http://www.cnblogs.com/xuanhun/p/3922847.html\" target=\"_blank\" rel=\"external\">在express站点中使用ejs模板引擎</a></li>\n</ul>\n<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><ul>\n<li><a href=\"http://www.bootcss.com/\" target=\"_blank\" rel=\"external\">bootcss</a></li>\n<li><a href=\"http://www.bootcss.com/p/websafecolors/\" target=\"_blank\" rel=\"external\">WEB安全色</a></li>\n</ul>\n<h2 id=\"个人\"><a href=\"#个人\" class=\"headerlink\" title=\"个人\"></a>个人</h2><ul>\n<li><a href=\"https://github.com/xujiao1989\" target=\"_blank\" rel=\"external\">github</a></li>\n<li><a href=\"http://www.xujiaosite.com/\" target=\"_blank\" rel=\"external\">个人博客</a></li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li><a href=\"http://npm.taobao.org/\" target=\"_blank\" rel=\"external\">淘宝 NPM 镜像</a></li>\n<li><a href=\"https://leetcode.com/\" target=\"_blank\" rel=\"external\">leetcode</a></li>\n<li><a href=\"http://caniuse.com/\" target=\"_blank\" rel=\"external\">can i use</a></li>\n<li><a href=\"http://www.iconfont.cn/plus\" target=\"_blank\" rel=\"external\">阿里巴巴的iconfont</a></li>\n</ul>\n<h2 id=\"图片素材\"><a href=\"#图片素材\" class=\"headerlink\" title=\"图片素材\"></a>图片素材</h2><ul>\n<li><a href=\"http://www.58pic.com/\" target=\"_blank\" rel=\"external\">千图网</a></li>\n<li><a href=\"http://588ku.com/?h=bd\" target=\"_blank\" rel=\"external\">千库网</a></li>\n</ul>\n<h3 id=\"博客搭建\"><a href=\"#博客搭建\" class=\"headerlink\" title=\"博客搭建\"></a>博客搭建</h3><ul>\n<li><a href=\"http://theme-next.iissnan.com/\" target=\"_blank\" rel=\"external\">NexT使用文档</a></li>\n<li><a href=\"http://www.jianshu.com/p/05289a4bc8b2\" target=\"_blank\" rel=\"external\">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000004947261\" target=\"_blank\" rel=\"external\">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></li>\n<li><a href=\"https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud\" target=\"_blank\" rel=\"external\">为NexT主题添加文章阅读量统计功能</a></li>\n<li><a href=\"https://cart.godaddy.com/EmptyCart.aspx?isc=cjc2off30\" target=\"_blank\" rel=\"external\">godaddy域名购买</a></li>\n<li><a href=\"https://www.dnspod.cn/Login\" target=\"_blank\" rel=\"external\">DNS注册</a></li>\n</ul>\n<h2 id=\"牛人博客\"><a href=\"#牛人博客\" class=\"headerlink\" title=\"牛人博客\"></a>牛人博客</h2><ul>\n<li><a href=\"http://www.haorooms.com/\" target=\"_blank\" rel=\"external\">Haorooms</a></li>\n<li><a href=\"http://www.whycss.com/\" target=\"_blank\" rel=\"external\">前端网址导航</a></li>\n<li><a href=\"http://www.liaoxuefeng.com/\" target=\"_blank\" rel=\"external\">廖雪峰的官方网站</a></li>\n<li><a href=\"http://www.whycss.com/\" target=\"_blank\" rel=\"external\">前端网址导航</a></li>\n<li><a href=\"http://www.haorooms.com/\" target=\"_blank\" rel=\"external\">Haorooms</a></li>\n<li><a href=\"http://www.whycss.com/\" target=\"_blank\" rel=\"external\">前端网址导航</a></li>\n<li><a href=\"http://www.qdfuns.com/\" target=\"_blank\" rel=\"external\">前端网</a></li>\n<li><a href=\"http://fex.baidu.com/\" target=\"_blank\" rel=\"external\">百度FEX</a></li>\n<li><a href=\"http://fe.meituan.com/\" target=\"_blank\" rel=\"external\">美团FE博客</a></li>\n<li><a href=\"http://fe.meituan.com/yui3-practice.html\" target=\"_blank\" rel=\"external\">YUI3在美团的实践</a></li>\n<li><a href=\"http://scrat.io/#!/index\" target=\"_blank\" rel=\"external\">scrat的webapp模块化开发体系</a></li>\n<li><a href=\"http://www.ruanyifeng.com/home.html\" target=\"_blank\" rel=\"external\">阮一峰个人博客</a></li>\n<li><a href=\"http://www.sdifenzhou.com/\" target=\"_blank\" rel=\"external\">史蒂夫周-mac软件破解</a></li>\n<li><a href=\"http://2017.miaov.com/\" target=\"_blank\" rel=\"external\">妙味课堂</a></li>\n<li><a href=\"http://fex.baidu.com/\" target=\"_blank\" rel=\"external\">百度FEX</a></li>\n<li><a href=\"https://lifesinger.wordpress.com/\" target=\"_blank\" rel=\"external\">玉伯的博客</a></li>\n<li><a href=\"https://blog.thankbabe.com/collection/\" target=\"_blank\" rel=\"external\">好用的工具导航</a></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"移动端\"><a href=\"#移动端\" class=\"headerlink\" title=\"移动端\"></a>移动端</h2><ul>\n<li><a href=\"http://www.jb51.net/article/76893.htm\">js中flexible.js实现淘宝弹性布局方案</a></li>\n<li><a href=\"http://www.bootcss.com/p/zeptojs/\">Zepto中文API</a></li>\n<li><a href=\"http://www.qdfuns.com/notes/23659/5e3cd2904a56f5e6b86c4d49e90e0f34.html?winzoom=1\">从淘宝适配布局谈移动端适配</a></li>\n</ul>\n<h2 id=\"HTML\"><a href=\"#HTML\" class=\"headerlink\" title=\"HTML\"></a>HTML</h2><ul>\n<li><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/Guide/HTML/Sections_and_Outlines_of_an_HTML5_document\">HTML5的文档节段和纲要</a></li>\n<li><a href=\"http://tool.oschina.net/commons?type=2\">HTML占位符对照表</a></li>\n</ul>\n<h2 id=\"JS\"><a href=\"#JS\" class=\"headerlink\" title=\"JS\"></a>JS</h2><ul>\n<li><a href=\"http://es6.ruanyifeng.com/\">ECMAScript 6 入门</a></li>\n<li><a href=\"http://www.cnblogs.com/fingerdancing/archive/2013/04/30/jsPlugin.html\">js插件编写规范</a></li>\n<li><a href=\"http://www.css88.com/archives/4821\">jQuery插件开发入门</a></li>\n<li><a href=\"http://www.gulpjs.com.cn/docs/writing-a-plugin/\">gulp编写插件</a></li>\n<li><a href=\"http://www.css88.com/archives/4821\">jQuery插件开发入门</a></li>\n<li><a href=\"http://www.gulpjs.com.cn/\">gulpjs官网</a></li>\n<li><a href=\"http://lzw.me/pages/ecmascript/\">EcmaScript5.1</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000005128101\">https://segmentfault.com/a/1190000005128101</a></li>\n<li><a href=\"https://github.com/Platform-CUF/use-gulp\">gulp学习资料整理</a></li>\n<li><a href=\"http://webpackdoc.com/\">webpack中文指南</a></li>\n</ul>\n<h3 id=\"模块化\"><a href=\"#模块化\" class=\"headerlink\" title=\"模块化\"></a>模块化</h3><ul>\n<li><a href=\"http://www.cnblogs.com/ifantastic/p/4648329.html\">CommonJS 模块规范 1.1.1</a></li>\n<li><a href=\"http://justineo.github.io/singles/writing-modular-js/\">使用 AMD、CommonJS 及 ES Harmony 编写模块化的 JavaScript</a></li>\n<li><a href=\"http://requirejs.org/docs/whyamd.html\">why amd</a></li>\n<li><a href=\"http://www.ruanyifeng.com/blog/2015/05/commonjs-in-browser.html\">浏览器加载 CommonJS 模块的原理与实现</a></li>\n<li><a href=\"http://blog.chinaunix.net/uid-26672038-id-4112229.html\">JavaSript模块规范 - AMD规范与CMD规范介绍 </a></li>\n</ul>\n<h2 id=\"浏览器\"><a href=\"#浏览器\" class=\"headerlink\" title=\"浏览器\"></a>浏览器</h2><ul>\n<li><a href=\"http://fex.baidu.com/blog/2014/05/what-happen/?qq-pf-to=pcqq.c2c\">从输入 URL 到页面加载完成的过程中都发生了什么事情？</a></li>\n<li><a href=\"http://www.jianshu.com/p/cf36d48652f4\">Chrome 开发者工具中文指南</a></li>\n<li><a href=\"http://blog.csdn.net/rogeryi/article/details/23686609\">How Rendering Work (in WebKit and Blink)</a></li>\n<li><a href=\"http://blog.csdn.net/rogeryi/article/details/17657779\">浏览器渲染发展的一些思考</a></li>\n<li><a href=\"http://blog.csdn.net/luoshengyang/article/details/50615628\">Chromium网页Render Object Tree创建过程分析</a></li>\n<li><a href=\"http://blog.csdn.net/luoshengyang/article/details/50648792\">Chromium网页Render Layer Tree创建过程分析</a></li>\n<li><a href=\"http://blog.csdn.net/luoshengyang/article/details/50661553\">Chromium网页Graphics Layer Tree创建过程分析</a></li>\n</ul>\n<h2 id=\"React\"><a href=\"#React\" class=\"headerlink\" title=\"React\"></a>React</h2><ul>\n<li><a href=\"http://reactnative.cn/\">RN中文网</a></li>\n</ul>\n<h2 id=\"node\"><a href=\"#node\" class=\"headerlink\" title=\"node\"></a>node</h2><ul>\n<li><a href=\"http://nodeschool.io/zh-cn/\">nodeschool</a></li>\n<li><a href=\"https://www.zhihu.com/question/21567720\">如何系统地学习Node.js？</a></li>\n<li><a href=\"https://github.com/jimuyouyou/node-interview-questions#%E8%B5%B7%E6%BA%90\">node-interview-questions</a></li>\n<li><a href=\"http://www.runoob.com/nodejs/nodejs-tutorial.html\">Node.js 教程</a></li>\n<li><a href=\"http://expressjs.jser.us/api\">express API</a></li>\n<li><a href=\"https://cnodejs.org/topic/504b4924e2b84515770103dd\">Mongoose学习参考文档</a></li>\n<li><a href=\"http://www.cnblogs.com/huangxincheng/archive/2012/02/18/2356595.html\">8天学通MongoDB——第一天 基础入门</a></li>\n<li><a href=\"http://www.cnblogs.com/xuanhun/p/3922847.html\">在express站点中使用ejs模板引擎</a></li>\n</ul>\n<h2 id=\"CSS\"><a href=\"#CSS\" class=\"headerlink\" title=\"CSS\"></a>CSS</h2><ul>\n<li><a href=\"http://www.bootcss.com/\">bootcss</a></li>\n<li><a href=\"http://www.bootcss.com/p/websafecolors/\">WEB安全色</a></li>\n</ul>\n<h2 id=\"个人\"><a href=\"#个人\" class=\"headerlink\" title=\"个人\"></a>个人</h2><ul>\n<li><a href=\"https://github.com/xujiao1989\">github</a></li>\n<li><a href=\"http://www.xujiaosite.com/\">个人博客</a></li>\n</ul>\n<h2 id=\"其他\"><a href=\"#其他\" class=\"headerlink\" title=\"其他\"></a>其他</h2><ul>\n<li><a href=\"http://npm.taobao.org/\">淘宝 NPM 镜像</a></li>\n<li><a href=\"https://leetcode.com/\">leetcode</a></li>\n<li><a href=\"http://caniuse.com/\">can i use</a></li>\n<li><a href=\"http://www.iconfont.cn/plus\">阿里巴巴的iconfont</a></li>\n</ul>\n<h2 id=\"图片素材\"><a href=\"#图片素材\" class=\"headerlink\" title=\"图片素材\"></a>图片素材</h2><ul>\n<li><a href=\"http://www.58pic.com/\">千图网</a></li>\n<li><a href=\"http://588ku.com/?h=bd\">千库网</a></li>\n</ul>\n<h3 id=\"博客搭建\"><a href=\"#博客搭建\" class=\"headerlink\" title=\"博客搭建\"></a>博客搭建</h3><ul>\n<li><a href=\"http://theme-next.iissnan.com/\">NexT使用文档</a></li>\n<li><a href=\"http://www.jianshu.com/p/05289a4bc8b2\">如何搭建一个独立博客——简明Github Pages与Hexo教程</a></li>\n<li><a href=\"https://segmentfault.com/a/1190000004947261\">手把手教你使用Hexo + Github Pages搭建个人独立博客</a></li>\n<li><a href=\"https://notes.wanghao.work/2015-10-21-%E4%B8%BANexT%E4%B8%BB%E9%A2%98%E6%B7%BB%E5%8A%A0%E6%96%87%E7%AB%A0%E9%98%85%E8%AF%BB%E9%87%8F%E7%BB%9F%E8%AE%A1%E5%8A%9F%E8%83%BD.html#%E9%85%8D%E7%BD%AELeanCloud\">为NexT主题添加文章阅读量统计功能</a></li>\n<li><a href=\"https://cart.godaddy.com/EmptyCart.aspx?isc=cjc2off30\">godaddy域名购买</a></li>\n<li><a href=\"https://www.dnspod.cn/Login\">DNS注册</a></li>\n</ul>\n<h2 id=\"牛人博客\"><a href=\"#牛人博客\" class=\"headerlink\" title=\"牛人博客\"></a>牛人博客</h2><ul>\n<li><a href=\"http://www.haorooms.com/\">Haorooms</a></li>\n<li><a href=\"http://www.whycss.com/\">前端网址导航</a></li>\n<li><a href=\"http://www.liaoxuefeng.com/\">廖雪峰的官方网站</a></li>\n<li><a href=\"http://www.whycss.com/\">前端网址导航</a></li>\n<li><a href=\"http://www.haorooms.com/\">Haorooms</a></li>\n<li><a href=\"http://www.whycss.com/\">前端网址导航</a></li>\n<li><a href=\"http://www.qdfuns.com/\">前端网</a></li>\n<li><a href=\"http://fex.baidu.com/\">百度FEX</a></li>\n<li><a href=\"http://fe.meituan.com/\">美团FE博客</a></li>\n<li><a href=\"http://fe.meituan.com/yui3-practice.html\">YUI3在美团的实践</a></li>\n<li><a href=\"http://scrat.io/#!/index\">scrat的webapp模块化开发体系</a></li>\n<li><a href=\"http://www.ruanyifeng.com/home.html\">阮一峰个人博客</a></li>\n<li><a href=\"http://www.sdifenzhou.com/\">史蒂夫周-mac软件破解</a></li>\n<li><a href=\"http://2017.miaov.com/\">妙味课堂</a></li>\n<li><a href=\"http://fex.baidu.com/\">百度FEX</a></li>\n<li><a href=\"https://lifesinger.wordpress.com/\">玉伯的博客</a></li>\n<li><a href=\"https://blog.thankbabe.com/collection/\">好用的工具导航</a></li>\n</ul>\n"},{"title":"前端面试题","date":"2017-02-13T07:10:00.000Z","_content":"\n\n\n+  使用正则表达式精确匹配出如下字符串中加粗部分的 \"3052202501\"。ptui_loginuin=3052202501%20;pt2gguin=o3052202501;uin=o**3052202501**;ptisp=ctc\n   \n        如果配合其他的字符的话,可以知道,加粗的那个\"3052202501\"\n        var rg1 = /uin=o(\\d{10})/g;\n        var match = rg1.exec(str);\n        var index = parseInt(match.index)+5\n        console.log(\"匹配的字符串的位置在:\"+index);\n        console.log(\"匹配到的字符串为:\"+match[1]);\n        \n +  完成方法count(str)，传入字符串，返回字符串中出现次数最多的字符及次数\n    \n        function count(str){\n                var length = str.length;\n                if(length ==0){\n                    return;\n                }\n                var max = 1;\n                var maxChar = str[0];\n                var obj = {};\n                for(var i = 0;i<length;i++){\n                    if(str[i] in obj){\n                        obj[str[i]] ++;\n                        if(max < obj[str[i]]){\n                            max = obj[str[i]];\n                            maxChar = str[i];\n                        }\n                    }else{\n                        obj[str[i]] = 1;\n                    }\n                }\n               return {\n                   maxNum : max,\n                   maxChar :maxChar\n               }\n            }\n \n \n + 假设你有一个函数rand5()，产生[0, 5)之间的随机整数，每个数字概率1/5，如何使用这个函数产生[0, 7)之间的随机整数，每个数字概率1/7\n    \n    + 正确的方法是利用rand5()函数生成1-25之间的数字，然后将其中的1-21映射成1-7，丢弃22-25。\n\n    \n  \n \n + 完成方法subset(arr1,arr2)，传入两个数组，判断数组arr1是否为数组arr2的子集\n \n + 现在有一个基准数组 records，先要求你维护其子集 selection 数组（初始为空），维护操作包含删除和插入。 插入：给定 records 数组中的一个元素，插入到 selection 中。删除：给定 records 数组中的一个元素，把它从 selection 中删除。现在要求你：实现 insert() 和 remove() 方法来实现以上操作。设计一个算法，保证每次维护操作后，保持 selection 数组中的元素的偏序关系与 records 数组中的保持一致，分析你算法的复杂度。\n \n\n \n \n\n\n","source":"_posts/前端面试题/JavaScript面试题.md","raw":"---\ntitle: 前端面试题\ndate: 2017-02-13 15:10\ntags:\n  - 前端开发\n  - 前端面试题\n  - HTML5简介\ncategories: HTML5学习笔记\n---\n\n\n\n+  使用正则表达式精确匹配出如下字符串中加粗部分的 \"3052202501\"。ptui_loginuin=3052202501%20;pt2gguin=o3052202501;uin=o**3052202501**;ptisp=ctc\n   \n        如果配合其他的字符的话,可以知道,加粗的那个\"3052202501\"\n        var rg1 = /uin=o(\\d{10})/g;\n        var match = rg1.exec(str);\n        var index = parseInt(match.index)+5\n        console.log(\"匹配的字符串的位置在:\"+index);\n        console.log(\"匹配到的字符串为:\"+match[1]);\n        \n +  完成方法count(str)，传入字符串，返回字符串中出现次数最多的字符及次数\n    \n        function count(str){\n                var length = str.length;\n                if(length ==0){\n                    return;\n                }\n                var max = 1;\n                var maxChar = str[0];\n                var obj = {};\n                for(var i = 0;i<length;i++){\n                    if(str[i] in obj){\n                        obj[str[i]] ++;\n                        if(max < obj[str[i]]){\n                            max = obj[str[i]];\n                            maxChar = str[i];\n                        }\n                    }else{\n                        obj[str[i]] = 1;\n                    }\n                }\n               return {\n                   maxNum : max,\n                   maxChar :maxChar\n               }\n            }\n \n \n + 假设你有一个函数rand5()，产生[0, 5)之间的随机整数，每个数字概率1/5，如何使用这个函数产生[0, 7)之间的随机整数，每个数字概率1/7\n    \n    + 正确的方法是利用rand5()函数生成1-25之间的数字，然后将其中的1-21映射成1-7，丢弃22-25。\n\n    \n  \n \n + 完成方法subset(arr1,arr2)，传入两个数组，判断数组arr1是否为数组arr2的子集\n \n + 现在有一个基准数组 records，先要求你维护其子集 selection 数组（初始为空），维护操作包含删除和插入。 插入：给定 records 数组中的一个元素，插入到 selection 中。删除：给定 records 数组中的一个元素，把它从 selection 中删除。现在要求你：实现 insert() 和 remove() 方法来实现以上操作。设计一个算法，保证每次维护操作后，保持 selection 数组中的元素的偏序关系与 records 数组中的保持一致，分析你算法的复杂度。\n \n\n \n \n\n\n","slug":"前端面试题/JavaScript面试题","published":1,"updated":"2017-03-13T00:32:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj07m5seg0008r6xl343q33m6","content":"<ul>\n<li><p>使用正则表达式精确匹配出如下字符串中加粗部分的 “3052202501”。ptui_loginuin=3052202501%20;pt2gguin=o3052202501;uin=o<strong>3052202501</strong>;ptisp=ctc</p>\n<pre><code>如果配合其他的字符的话,可以知道,加粗的那个&quot;3052202501&quot;\nvar rg1 = /uin=o(\\d{10})/g;\nvar match = rg1.exec(str);\nvar index = parseInt(match.index)+5\nconsole.log(&quot;匹配的字符串的位置在:&quot;+index);\nconsole.log(&quot;匹配到的字符串为:&quot;+match[1]);\n</code></pre><ul>\n<li><p>完成方法count(str)，传入字符串，返回字符串中出现次数最多的字符及次数</p>\n<p>  function count(str){</p>\n<pre><code>    var length = str.length;\n    if(length ==0){\n        return;\n    }\n    var max = 1;\n    var maxChar = str[0];\n    var obj = {};\n    for(var i = 0;i&lt;length;i++){\n        if(str[i] in obj){\n            obj[str[i]] ++;\n            if(max &lt; obj[str[i]]){\n                max = obj[str[i]];\n                maxChar = str[i];\n            }\n        }else{\n            obj[str[i]] = 1;\n        }\n    }\n   return {\n       maxNum : max,\n       maxChar :maxChar\n   }\n}\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>假设你有一个函数rand5()，产生[0, 5)之间的随机整数，每个数字概率1/5，如何使用这个函数产生[0, 7)之间的随机整数，每个数字概率1/7</p>\n<ul>\n<li>正确的方法是利用rand5()函数生成1-25之间的数字，然后将其中的1-21映射成1-7，丢弃22-25。</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>完成方法subset(arr1,arr2)，传入两个数组，判断数组arr1是否为数组arr2的子集</p>\n</li>\n<li><p>现在有一个基准数组 records，先要求你维护其子集 selection 数组（初始为空），维护操作包含删除和插入。 插入：给定 records 数组中的一个元素，插入到 selection 中。删除：给定 records 数组中的一个元素，把它从 selection 中删除。现在要求你：实现 insert() 和 remove() 方法来实现以上操作。设计一个算法，保证每次维护操作后，保持 selection 数组中的元素的偏序关系与 records 数组中的保持一致，分析你算法的复杂度。</p>\n</li>\n</ul>\n","excerpt":"","more":"<ul>\n<li><p>使用正则表达式精确匹配出如下字符串中加粗部分的 “3052202501”。ptui_loginuin=3052202501%20;pt2gguin=o3052202501;uin=o<strong>3052202501</strong>;ptisp=ctc</p>\n<pre><code>如果配合其他的字符的话,可以知道,加粗的那个&quot;3052202501&quot;\nvar rg1 = /uin=o(\\d{10})/g;\nvar match = rg1.exec(str);\nvar index = parseInt(match.index)+5\nconsole.log(&quot;匹配的字符串的位置在:&quot;+index);\nconsole.log(&quot;匹配到的字符串为:&quot;+match[1]);\n</code></pre><ul>\n<li><p>完成方法count(str)，传入字符串，返回字符串中出现次数最多的字符及次数</p>\n<p>  function count(str){</p>\n<pre><code>    var length = str.length;\n    if(length ==0){\n        return;\n    }\n    var max = 1;\n    var maxChar = str[0];\n    var obj = {};\n    for(var i = 0;i&lt;length;i++){\n        if(str[i] in obj){\n            obj[str[i]] ++;\n            if(max &lt; obj[str[i]]){\n                max = obj[str[i]];\n                maxChar = str[i];\n            }\n        }else{\n            obj[str[i]] = 1;\n        }\n    }\n   return {\n       maxNum : max,\n       maxChar :maxChar\n   }\n}\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>假设你有一个函数rand5()，产生[0, 5)之间的随机整数，每个数字概率1/5，如何使用这个函数产生[0, 7)之间的随机整数，每个数字概率1/7</p>\n<ul>\n<li>正确的方法是利用rand5()函数生成1-25之间的数字，然后将其中的1-21映射成1-7，丢弃22-25。</li>\n</ul>\n</li>\n</ul>\n<ul>\n<li><p>完成方法subset(arr1,arr2)，传入两个数组，判断数组arr1是否为数组arr2的子集</p>\n</li>\n<li><p>现在有一个基准数组 records，先要求你维护其子集 selection 数组（初始为空），维护操作包含删除和插入。 插入：给定 records 数组中的一个元素，插入到 selection 中。删除：给定 records 数组中的一个元素，把它从 selection 中删除。现在要求你：实现 insert() 和 remove() 方法来实现以上操作。设计一个算法，保证每次维护操作后，保持 selection 数组中的元素的偏序关系与 records 数组中的保持一致，分析你算法的复杂度。</p>\n</li>\n</ul>\n"},{"title":"js实现对象的深度克隆","date":"2017-03-13T00:32:30.000Z","_content":"\n\n## 变量访问的方式\n\n在JavaScript中，访问变量可以通过**值访问**也可以通过**引用访问**。\n\n+ `按值访问：`直接读取值的本身\n\n+ `按引用访问：`读取引用地址，根据地址查找真实值。引用类型的值是保存在内存中的对象，在JavaScript中不允许直接访问内存中的位置。所以在操作对象时，实际上操作的是在操作对象的引用而不是实际的对象。\n\n## 函数中的传参方式\n\n在JavaScript的函数传参数方式只能`按值传递`（不管传递的变量是值类型还是引用类型）。也就是将传递的参数复制给函数的一个局部变量（arguments）。\n\n值复制和引用复制：\n\n+ `值复制:`将值本身复制给arguments的一个元素，参数不会影响原变量\n+ `引用复制:`将值得地址复制给arguments的一个元素，参数会影响到原来的变量\n\n\n\n## 如何实现一个对象的深度克隆\n\n### 为什么要深度克隆一个对象\n\n在日常中对一个对象的复制都只是对其引用的复制，两者之间还是会相互影响，如：\n\n\t\tvar a = [1,2,3];\n\t\tvar b = a;\n\t\tb.push(5);\n\t\tconsole.log(a);// [1, 2, 3, 5]，对b的操作影响了a\n\t\t\n\n所以为了是b和a完全一致,但是又不相互影响,就有了深度克隆这一说。\n\n\n### 获取对象的基本类型\n\n我们都知道在JavaScript中,基本的数据类型(string/boolean/undefined/null/number)的复制属于值复制,相互之间不会有什么影响。那么我们接下来主要讨论的是对象的复制。\n\n+ 对象的类型：function、object、Array\n+ 如何获取以上的基本类型： Object.prototype.toString.call(para) \n  \n  + [object Function]\n  + [object Object]\n  + [object Array]\n \n  也就是返回值是一个字符串，可以通过以下方法获取具体的类型\n  \n            function objType(obj) {\n                var obj = Object.prototype.toString.call(obj).substring(8);\n                return obj.substring(0,obj.length-1);\n            }\n            \n            //获取值分别是：\n            \n            Function\n            Object\n            Array\n           \n\t    \n+ 函数的复制我们怎么去理解\n\n    + 函数是一个对象,函数名是指向对象的名称。\n    \n            function text(){\n                console.log(\"a\");\n            }\n            \n            这里,我们可以理解,以上的声明在内存中开辟了一个空间,保存了一个方法,这个方法包含一个打印功能。\n            \n            然后 变量text包含执行这个方法的地址。\n            \n            所以,var b = text;操作,就是将方法的地址复制给函数b。\n    \n\n   \n   + 在JavaScript中,函数不存在重载,也就是不存在某个函数被修改了的情况(只是断开了指向)。\n   \n### 具体实现\n\n这里的实现分为你三个部分,入口函数deepClone,对象的克隆函数,以及数组的克隆函数\n\n\n+ 对象的克隆\n\n        function cloneObj(obj) {\n                var tempObj = new Object();\n                for(key in obj){\n                    switch (objType(obj[key])){\n                        case \"Object\":\n                            tempObj[key] =cloneObj(obj[key]);\n                            break;\n                        case \"Array\":\n                            tempObj[key] = cloneArr(obj[key]);\n                            break;\n                        default:\n                            tempObj[key] = obj[key];\n        \n                        break;\n                    }\n                }\n                return tempObj;\n            }\n            \n            \n+ 数组的克隆\n        \n            function cloneArr(arr) {\n                var tempArr = new Array();\n                for(var i = 0;i<arr.length;i++){\n                    switch (objType(arr[i])){\n                        case \"Object\":\n                            tempArr.push(cloneObj(arr[key]));\n                            break;\n                        case \"Array\":\n                            tempArr.push(cloneArr(arr[key]))\n                            cloneArr(arr[i]);\n                            break;\n                        default:\n                            tempArr.push(arr[i])\n        \n                            break;\n                    }\n                }\n        \n                return tempArr;\n            }\n            \n            \n+ 克隆的入口\n\n            function deepClone(para) {\n                     var temp = null;\n                     switch (objType(para)){\n                         case \"Object\":\n                             temp = cloneObj(para);\n                             break;\n                         case \"Array\":\n                             temp = cloneArr(para);\n                             break;\n                         default:\n                             temp = para;\n                             break;\n                     }\n                     return temp;\n                 }\n  \n            \n+ 测试\n          \n          var testObj = {\n              \"name\":\"xujiao\",\n              \"age\":\"28\",\n              \"say\":function () {\n                  console.log(123);\n              },\n              \"arr\":[1,3,4],\n              \"obj\":{\n                  \"a\":12,\n                  \"b\":1,\n                  \"c\":3\n              }\n          }\n            var clonexx = deepClone(testObj);\n            clonexx.arr.push(333);\n            console.log(clonexx);\n            console.log(testObj);//对clonexx的操作并没有影响testObj\n\n\t\n\t\n\t\n\t\n\t\n\n\n","source":"_posts/前端面试题/javascript实现对象的深度克隆.md","raw":"---\ntitle: js实现对象的深度克隆\ndate: {{date}}\ntags:\n  - 前端开发\n  - js实现对象的深度克隆\n  - javascript\n  - 深度克隆\ncategories: javascript\n---\n\n\n## 变量访问的方式\n\n在JavaScript中，访问变量可以通过**值访问**也可以通过**引用访问**。\n\n+ `按值访问：`直接读取值的本身\n\n+ `按引用访问：`读取引用地址，根据地址查找真实值。引用类型的值是保存在内存中的对象，在JavaScript中不允许直接访问内存中的位置。所以在操作对象时，实际上操作的是在操作对象的引用而不是实际的对象。\n\n## 函数中的传参方式\n\n在JavaScript的函数传参数方式只能`按值传递`（不管传递的变量是值类型还是引用类型）。也就是将传递的参数复制给函数的一个局部变量（arguments）。\n\n值复制和引用复制：\n\n+ `值复制:`将值本身复制给arguments的一个元素，参数不会影响原变量\n+ `引用复制:`将值得地址复制给arguments的一个元素，参数会影响到原来的变量\n\n\n\n## 如何实现一个对象的深度克隆\n\n### 为什么要深度克隆一个对象\n\n在日常中对一个对象的复制都只是对其引用的复制，两者之间还是会相互影响，如：\n\n\t\tvar a = [1,2,3];\n\t\tvar b = a;\n\t\tb.push(5);\n\t\tconsole.log(a);// [1, 2, 3, 5]，对b的操作影响了a\n\t\t\n\n所以为了是b和a完全一致,但是又不相互影响,就有了深度克隆这一说。\n\n\n### 获取对象的基本类型\n\n我们都知道在JavaScript中,基本的数据类型(string/boolean/undefined/null/number)的复制属于值复制,相互之间不会有什么影响。那么我们接下来主要讨论的是对象的复制。\n\n+ 对象的类型：function、object、Array\n+ 如何获取以上的基本类型： Object.prototype.toString.call(para) \n  \n  + [object Function]\n  + [object Object]\n  + [object Array]\n \n  也就是返回值是一个字符串，可以通过以下方法获取具体的类型\n  \n            function objType(obj) {\n                var obj = Object.prototype.toString.call(obj).substring(8);\n                return obj.substring(0,obj.length-1);\n            }\n            \n            //获取值分别是：\n            \n            Function\n            Object\n            Array\n           \n\t    \n+ 函数的复制我们怎么去理解\n\n    + 函数是一个对象,函数名是指向对象的名称。\n    \n            function text(){\n                console.log(\"a\");\n            }\n            \n            这里,我们可以理解,以上的声明在内存中开辟了一个空间,保存了一个方法,这个方法包含一个打印功能。\n            \n            然后 变量text包含执行这个方法的地址。\n            \n            所以,var b = text;操作,就是将方法的地址复制给函数b。\n    \n\n   \n   + 在JavaScript中,函数不存在重载,也就是不存在某个函数被修改了的情况(只是断开了指向)。\n   \n### 具体实现\n\n这里的实现分为你三个部分,入口函数deepClone,对象的克隆函数,以及数组的克隆函数\n\n\n+ 对象的克隆\n\n        function cloneObj(obj) {\n                var tempObj = new Object();\n                for(key in obj){\n                    switch (objType(obj[key])){\n                        case \"Object\":\n                            tempObj[key] =cloneObj(obj[key]);\n                            break;\n                        case \"Array\":\n                            tempObj[key] = cloneArr(obj[key]);\n                            break;\n                        default:\n                            tempObj[key] = obj[key];\n        \n                        break;\n                    }\n                }\n                return tempObj;\n            }\n            \n            \n+ 数组的克隆\n        \n            function cloneArr(arr) {\n                var tempArr = new Array();\n                for(var i = 0;i<arr.length;i++){\n                    switch (objType(arr[i])){\n                        case \"Object\":\n                            tempArr.push(cloneObj(arr[key]));\n                            break;\n                        case \"Array\":\n                            tempArr.push(cloneArr(arr[key]))\n                            cloneArr(arr[i]);\n                            break;\n                        default:\n                            tempArr.push(arr[i])\n        \n                            break;\n                    }\n                }\n        \n                return tempArr;\n            }\n            \n            \n+ 克隆的入口\n\n            function deepClone(para) {\n                     var temp = null;\n                     switch (objType(para)){\n                         case \"Object\":\n                             temp = cloneObj(para);\n                             break;\n                         case \"Array\":\n                             temp = cloneArr(para);\n                             break;\n                         default:\n                             temp = para;\n                             break;\n                     }\n                     return temp;\n                 }\n  \n            \n+ 测试\n          \n          var testObj = {\n              \"name\":\"xujiao\",\n              \"age\":\"28\",\n              \"say\":function () {\n                  console.log(123);\n              },\n              \"arr\":[1,3,4],\n              \"obj\":{\n                  \"a\":12,\n                  \"b\":1,\n                  \"c\":3\n              }\n          }\n            var clonexx = deepClone(testObj);\n            clonexx.arr.push(333);\n            console.log(clonexx);\n            console.log(testObj);//对clonexx的操作并没有影响testObj\n\n\t\n\t\n\t\n\t\n\t\n\n\n","slug":"前端面试题/javascript实现对象的深度克隆","published":1,"updated":"2017-03-13T00:32:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj07m5sej0009r6xlg441khiy","content":"<h2 id=\"变量访问的方式\"><a href=\"#变量访问的方式\" class=\"headerlink\" title=\"变量访问的方式\"></a>变量访问的方式</h2><p>在JavaScript中，访问变量可以通过<strong>值访问</strong>也可以通过<strong>引用访问</strong>。</p>\n<ul>\n<li><p><code>按值访问：</code>直接读取值的本身</p>\n</li>\n<li><p><code>按引用访问：</code>读取引用地址，根据地址查找真实值。引用类型的值是保存在内存中的对象，在JavaScript中不允许直接访问内存中的位置。所以在操作对象时，实际上操作的是在操作对象的引用而不是实际的对象。</p>\n</li>\n</ul>\n<h2 id=\"函数中的传参方式\"><a href=\"#函数中的传参方式\" class=\"headerlink\" title=\"函数中的传参方式\"></a>函数中的传参方式</h2><p>在JavaScript的函数传参数方式只能<code>按值传递</code>（不管传递的变量是值类型还是引用类型）。也就是将传递的参数复制给函数的一个局部变量（arguments）。</p>\n<p>值复制和引用复制：</p>\n<ul>\n<li><code>值复制:</code>将值本身复制给arguments的一个元素，参数不会影响原变量</li>\n<li><code>引用复制:</code>将值得地址复制给arguments的一个元素，参数会影响到原来的变量</li>\n</ul>\n<h2 id=\"如何实现一个对象的深度克隆\"><a href=\"#如何实现一个对象的深度克隆\" class=\"headerlink\" title=\"如何实现一个对象的深度克隆\"></a>如何实现一个对象的深度克隆</h2><h3 id=\"为什么要深度克隆一个对象\"><a href=\"#为什么要深度克隆一个对象\" class=\"headerlink\" title=\"为什么要深度克隆一个对象\"></a>为什么要深度克隆一个对象</h3><p>在日常中对一个对象的复制都只是对其引用的复制，两者之间还是会相互影响，如：</p>\n<pre><code>var a = [1,2,3];\nvar b = a;\nb.push(5);\nconsole.log(a);// [1, 2, 3, 5]，对b的操作影响了a\n</code></pre><p>所以为了是b和a完全一致,但是又不相互影响,就有了深度克隆这一说。</p>\n<h3 id=\"获取对象的基本类型\"><a href=\"#获取对象的基本类型\" class=\"headerlink\" title=\"获取对象的基本类型\"></a>获取对象的基本类型</h3><p>我们都知道在JavaScript中,基本的数据类型(string/boolean/undefined/null/number)的复制属于值复制,相互之间不会有什么影响。那么我们接下来主要讨论的是对象的复制。</p>\n<ul>\n<li>对象的类型：function、object、Array</li>\n<li><p>如何获取以上的基本类型： Object.prototype.toString.call(para) </p>\n<ul>\n<li>[object Function]</li>\n<li>[object Object]</li>\n<li>[object Array]</li>\n</ul>\n<p>也就是返回值是一个字符串，可以通过以下方法获取具体的类型</p>\n<pre><code>function objType(obj) {\n    var obj = Object.prototype.toString.call(obj).substring(8);\n    return obj.substring(0,obj.length-1);\n}\n\n//获取值分别是：\n\nFunction\nObject\nArray\n</code></pre></li>\n</ul>\n<ul>\n<li><p>函数的复制我们怎么去理解</p>\n<ul>\n<li><p>函数是一个对象,函数名是指向对象的名称。</p>\n<pre><code>function text(){\n    console.log(&quot;a&quot;);\n}\n\n这里,我们可以理解,以上的声明在内存中开辟了一个空间,保存了一个方法,这个方法包含一个打印功能。\n\n然后 变量text包含执行这个方法的地址。\n\n所以,var b = text;操作,就是将方法的地址复制给函数b。\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>在JavaScript中,函数不存在重载,也就是不存在某个函数被修改了的情况(只是断开了指向)。</li>\n</ul>\n<h3 id=\"具体实现\"><a href=\"#具体实现\" class=\"headerlink\" title=\"具体实现\"></a>具体实现</h3><p>这里的实现分为你三个部分,入口函数deepClone,对象的克隆函数,以及数组的克隆函数</p>\n<ul>\n<li><p>对象的克隆</p>\n<pre><code>function cloneObj(obj) {\n        var tempObj = new Object();\n        for(key in obj){\n            switch (objType(obj[key])){\n                case &quot;Object&quot;:\n                    tempObj[key] =cloneObj(obj[key]);\n                    break;\n                case &quot;Array&quot;:\n                    tempObj[key] = cloneArr(obj[key]);\n                    break;\n                default:\n                    tempObj[key] = obj[key];\n\n                break;\n            }\n        }\n        return tempObj;\n    }\n</code></pre></li>\n</ul>\n<ul>\n<li><p>数组的克隆</p>\n<pre><code>function cloneArr(arr) {\n    var tempArr = new Array();\n    for(var i = 0;i&lt;arr.length;i++){\n        switch (objType(arr[i])){\n            case &quot;Object&quot;:\n                tempArr.push(cloneObj(arr[key]));\n                break;\n            case &quot;Array&quot;:\n                tempArr.push(cloneArr(arr[key]))\n                cloneArr(arr[i]);\n                break;\n            default:\n                tempArr.push(arr[i])\n\n                break;\n        }\n    }\n\n    return tempArr;\n}\n</code></pre></li>\n</ul>\n<ul>\n<li><p>克隆的入口</p>\n<pre><code>function deepClone(para) {\n         var temp = null;\n         switch (objType(para)){\n             case &quot;Object&quot;:\n                 temp = cloneObj(para);\n                 break;\n             case &quot;Array&quot;:\n                 temp = cloneArr(para);\n                 break;\n             default:\n                 temp = para;\n                 break;\n         }\n         return temp;\n     }\n</code></pre></li>\n</ul>\n<ul>\n<li><p>测试</p>\n<pre><code>var testObj = {\n    &quot;name&quot;:&quot;xujiao&quot;,\n    &quot;age&quot;:&quot;28&quot;,\n    &quot;say&quot;:function () {\n        console.log(123);\n    },\n    &quot;arr&quot;:[1,3,4],\n    &quot;obj&quot;:{\n        &quot;a&quot;:12,\n        &quot;b&quot;:1,\n        &quot;c&quot;:3\n    }\n}\n  var clonexx = deepClone(testObj);\n  clonexx.arr.push(333);\n  console.log(clonexx);\n  console.log(testObj);//对clonexx的操作并没有影响testObj\n</code></pre></li>\n</ul>\n","excerpt":"","more":"<h2 id=\"变量访问的方式\"><a href=\"#变量访问的方式\" class=\"headerlink\" title=\"变量访问的方式\"></a>变量访问的方式</h2><p>在JavaScript中，访问变量可以通过<strong>值访问</strong>也可以通过<strong>引用访问</strong>。</p>\n<ul>\n<li><p><code>按值访问：</code>直接读取值的本身</p>\n</li>\n<li><p><code>按引用访问：</code>读取引用地址，根据地址查找真实值。引用类型的值是保存在内存中的对象，在JavaScript中不允许直接访问内存中的位置。所以在操作对象时，实际上操作的是在操作对象的引用而不是实际的对象。</p>\n</li>\n</ul>\n<h2 id=\"函数中的传参方式\"><a href=\"#函数中的传参方式\" class=\"headerlink\" title=\"函数中的传参方式\"></a>函数中的传参方式</h2><p>在JavaScript的函数传参数方式只能<code>按值传递</code>（不管传递的变量是值类型还是引用类型）。也就是将传递的参数复制给函数的一个局部变量（arguments）。</p>\n<p>值复制和引用复制：</p>\n<ul>\n<li><code>值复制:</code>将值本身复制给arguments的一个元素，参数不会影响原变量</li>\n<li><code>引用复制:</code>将值得地址复制给arguments的一个元素，参数会影响到原来的变量</li>\n</ul>\n<h2 id=\"如何实现一个对象的深度克隆\"><a href=\"#如何实现一个对象的深度克隆\" class=\"headerlink\" title=\"如何实现一个对象的深度克隆\"></a>如何实现一个对象的深度克隆</h2><h3 id=\"为什么要深度克隆一个对象\"><a href=\"#为什么要深度克隆一个对象\" class=\"headerlink\" title=\"为什么要深度克隆一个对象\"></a>为什么要深度克隆一个对象</h3><p>在日常中对一个对象的复制都只是对其引用的复制，两者之间还是会相互影响，如：</p>\n<pre><code>var a = [1,2,3];\nvar b = a;\nb.push(5);\nconsole.log(a);// [1, 2, 3, 5]，对b的操作影响了a\n</code></pre><p>所以为了是b和a完全一致,但是又不相互影响,就有了深度克隆这一说。</p>\n<h3 id=\"获取对象的基本类型\"><a href=\"#获取对象的基本类型\" class=\"headerlink\" title=\"获取对象的基本类型\"></a>获取对象的基本类型</h3><p>我们都知道在JavaScript中,基本的数据类型(string/boolean/undefined/null/number)的复制属于值复制,相互之间不会有什么影响。那么我们接下来主要讨论的是对象的复制。</p>\n<ul>\n<li>对象的类型：function、object、Array</li>\n<li><p>如何获取以上的基本类型： Object.prototype.toString.call(para) </p>\n<ul>\n<li>[object Function]</li>\n<li>[object Object]</li>\n<li>[object Array]</li>\n</ul>\n<p>也就是返回值是一个字符串，可以通过以下方法获取具体的类型</p>\n<pre><code>function objType(obj) {\n    var obj = Object.prototype.toString.call(obj).substring(8);\n    return obj.substring(0,obj.length-1);\n}\n\n//获取值分别是：\n\nFunction\nObject\nArray\n</code></pre></li>\n</ul>\n<ul>\n<li><p>函数的复制我们怎么去理解</p>\n<ul>\n<li><p>函数是一个对象,函数名是指向对象的名称。</p>\n<pre><code>function text(){\n    console.log(&quot;a&quot;);\n}\n\n这里,我们可以理解,以上的声明在内存中开辟了一个空间,保存了一个方法,这个方法包含一个打印功能。\n\n然后 变量text包含执行这个方法的地址。\n\n所以,var b = text;操作,就是将方法的地址复制给函数b。\n</code></pre></li>\n</ul>\n</li>\n</ul>\n<ul>\n<li>在JavaScript中,函数不存在重载,也就是不存在某个函数被修改了的情况(只是断开了指向)。</li>\n</ul>\n<h3 id=\"具体实现\"><a href=\"#具体实现\" class=\"headerlink\" title=\"具体实现\"></a>具体实现</h3><p>这里的实现分为你三个部分,入口函数deepClone,对象的克隆函数,以及数组的克隆函数</p>\n<ul>\n<li><p>对象的克隆</p>\n<pre><code>function cloneObj(obj) {\n        var tempObj = new Object();\n        for(key in obj){\n            switch (objType(obj[key])){\n                case &quot;Object&quot;:\n                    tempObj[key] =cloneObj(obj[key]);\n                    break;\n                case &quot;Array&quot;:\n                    tempObj[key] = cloneArr(obj[key]);\n                    break;\n                default:\n                    tempObj[key] = obj[key];\n\n                break;\n            }\n        }\n        return tempObj;\n    }\n</code></pre></li>\n</ul>\n<ul>\n<li><p>数组的克隆</p>\n<pre><code>function cloneArr(arr) {\n    var tempArr = new Array();\n    for(var i = 0;i&lt;arr.length;i++){\n        switch (objType(arr[i])){\n            case &quot;Object&quot;:\n                tempArr.push(cloneObj(arr[key]));\n                break;\n            case &quot;Array&quot;:\n                tempArr.push(cloneArr(arr[key]))\n                cloneArr(arr[i]);\n                break;\n            default:\n                tempArr.push(arr[i])\n\n                break;\n        }\n    }\n\n    return tempArr;\n}\n</code></pre></li>\n</ul>\n<ul>\n<li><p>克隆的入口</p>\n<pre><code>function deepClone(para) {\n         var temp = null;\n         switch (objType(para)){\n             case &quot;Object&quot;:\n                 temp = cloneObj(para);\n                 break;\n             case &quot;Array&quot;:\n                 temp = cloneArr(para);\n                 break;\n             default:\n                 temp = para;\n                 break;\n         }\n         return temp;\n     }\n</code></pre></li>\n</ul>\n<ul>\n<li><p>测试</p>\n<pre><code>var testObj = {\n    &quot;name&quot;:&quot;xujiao&quot;,\n    &quot;age&quot;:&quot;28&quot;,\n    &quot;say&quot;:function () {\n        console.log(123);\n    },\n    &quot;arr&quot;:[1,3,4],\n    &quot;obj&quot;:{\n        &quot;a&quot;:12,\n        &quot;b&quot;:1,\n        &quot;c&quot;:3\n    }\n}\n  var clonexx = deepClone(testObj);\n  clonexx.arr.push(333);\n  console.log(clonexx);\n  console.log(testObj);//对clonexx的操作并没有影响testObj\n</code></pre></li>\n</ul>\n"},{"title":"git学习笔记","date":"2017-02-13T07:49:00.000Z","_content":"\n\n### 强制从远程拉取最新代码\n\n    git reset --hard remote http://,,,,/origin/master\n    \n### git init \n \n将当前的文件夹加入git的版本控制,该文件夹下默认会生成一个隐藏的.git文件夹,里面保存着各个分支各个版本的代码\n\n### git status\n\n查看文件是否被修改\n\n### git diff\n\n查看文件修改内容\n\n### git reflog\n\n用来记录每一次的提交 \n\n### 撤销工作区的修改(未add和commit的)\n\ngit checkout --file / git checkout -- .\n\n### 回退版本-git reset\n+ 参数\n    + hard\n    + soft\n    + mixed\n    \n+ git reset --hard commit_id  \n   \n   git reset –hard：彻底回退到某个版本，本地的源码也会变为上一个版本的内容\n   \n### git rm file \n \n 删除一个文件\n \n### git 分支\n\n+ 在本地,工作区只有一个,所以工作区所有的修改,只要没有提交到对应的分支上,会体现在所有的分支\n+ git add 将工作区的内容提交到暂存区\n+ git commit 将暂存区的内容提交到当前分支\n+ 常用分支命令\n    + git branch:查看分支\n    + git checkout branch-name: 切换分支\n    + git checkout -b name: 创建并且切换分支\n    + git branch -d branch-name: 删除分支\n    + git merge xxx:  将xxx分支的内容合并到当前分支\n\n### git stash\n\n+ 暂时存储当前工区的内容\n+ 存储后,任何分支都没有之前的修改,因为没有add commit\n+ git stash操作的区域仍然是工作区,所以所有的分支都能读到暂存的内容\n+ 暂存的常用命令\n    + git stash list: 查看所有的stash内容\n    + git stash apply: 恢复stash内容\n    + git stash drop: 删除stash的内容\n    + git stash pop: 恢复并且删除stash的内容\n    \n### git tag\n\n打标签,方便回滚,这个主要哦针对一个完整功能上线时打一个tag,方便回滚到上一个功能(类似于-m的作用,只是-m针对每一次的提交)\n\n+ git tag: 控制台打印所有的标签\n+ git tag -l 'V0.1*': 搜索符合模式的tag\n+ 打标签的常用命令\n    + 切换标签: git checkout tagname\n    + git tag -g v0.1.1.9fbc3d0 :给特定的commit打tag\n    + 标签的发布: git push origin -tags # 说明\n    \n    \n### 将本地文件夹关联远程仓库\n\ngit remote add origin git@http://xujiao1989/xxx\n \n### 关于.gitignore\n+ 只能忽略那些原来没有被trace的文件\n+ 如何解决添加规则后不生效的问题\n    \n     git rm --cached file\n\n### TIPS\n\n+ git跟踪的是修改,而不是文件\n+ 在git当中,HEAD表示的是当前版本,上一个版本是HEAD^,上上个版本是HEAD^^,所以回退到上一个版本可以是git reset --hard HEAD^(这里也可以是特定的提交)\n\n    ","source":"_posts/版本控制/2017-02-13-git学习笔记.md","raw":"---\ntitle: git学习笔记\ndate: 2017-02-13 15:49\ntags:\n  - 前端开发\n  - 代码版本控制\n  - git\ncategories: 代码版本控制\n---\n\n\n### 强制从远程拉取最新代码\n\n    git reset --hard remote http://,,,,/origin/master\n    \n### git init \n \n将当前的文件夹加入git的版本控制,该文件夹下默认会生成一个隐藏的.git文件夹,里面保存着各个分支各个版本的代码\n\n### git status\n\n查看文件是否被修改\n\n### git diff\n\n查看文件修改内容\n\n### git reflog\n\n用来记录每一次的提交 \n\n### 撤销工作区的修改(未add和commit的)\n\ngit checkout --file / git checkout -- .\n\n### 回退版本-git reset\n+ 参数\n    + hard\n    + soft\n    + mixed\n    \n+ git reset --hard commit_id  \n   \n   git reset –hard：彻底回退到某个版本，本地的源码也会变为上一个版本的内容\n   \n### git rm file \n \n 删除一个文件\n \n### git 分支\n\n+ 在本地,工作区只有一个,所以工作区所有的修改,只要没有提交到对应的分支上,会体现在所有的分支\n+ git add 将工作区的内容提交到暂存区\n+ git commit 将暂存区的内容提交到当前分支\n+ 常用分支命令\n    + git branch:查看分支\n    + git checkout branch-name: 切换分支\n    + git checkout -b name: 创建并且切换分支\n    + git branch -d branch-name: 删除分支\n    + git merge xxx:  将xxx分支的内容合并到当前分支\n\n### git stash\n\n+ 暂时存储当前工区的内容\n+ 存储后,任何分支都没有之前的修改,因为没有add commit\n+ git stash操作的区域仍然是工作区,所以所有的分支都能读到暂存的内容\n+ 暂存的常用命令\n    + git stash list: 查看所有的stash内容\n    + git stash apply: 恢复stash内容\n    + git stash drop: 删除stash的内容\n    + git stash pop: 恢复并且删除stash的内容\n    \n### git tag\n\n打标签,方便回滚,这个主要哦针对一个完整功能上线时打一个tag,方便回滚到上一个功能(类似于-m的作用,只是-m针对每一次的提交)\n\n+ git tag: 控制台打印所有的标签\n+ git tag -l 'V0.1*': 搜索符合模式的tag\n+ 打标签的常用命令\n    + 切换标签: git checkout tagname\n    + git tag -g v0.1.1.9fbc3d0 :给特定的commit打tag\n    + 标签的发布: git push origin -tags # 说明\n    \n    \n### 将本地文件夹关联远程仓库\n\ngit remote add origin git@http://xujiao1989/xxx\n \n### 关于.gitignore\n+ 只能忽略那些原来没有被trace的文件\n+ 如何解决添加规则后不生效的问题\n    \n     git rm --cached file\n\n### TIPS\n\n+ git跟踪的是修改,而不是文件\n+ 在git当中,HEAD表示的是当前版本,上一个版本是HEAD^,上上个版本是HEAD^^,所以回退到上一个版本可以是git reset --hard HEAD^(这里也可以是特定的提交)\n\n    ","slug":"版本控制/2017-02-13-git学习笔记","published":1,"updated":"2017-03-13T00:32:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj07m5sel000ar6xl7d70myoz","content":"<h3 id=\"强制从远程拉取最新代码\"><a href=\"#强制从远程拉取最新代码\" class=\"headerlink\" title=\"强制从远程拉取最新代码\"></a>强制从远程拉取最新代码</h3><pre><code>git reset --hard remote http://,,,,/origin/master\n</code></pre><h3 id=\"git-init\"><a href=\"#git-init\" class=\"headerlink\" title=\"git init\"></a>git init</h3><p>将当前的文件夹加入git的版本控制,该文件夹下默认会生成一个隐藏的.git文件夹,里面保存着各个分支各个版本的代码</p>\n<h3 id=\"git-status\"><a href=\"#git-status\" class=\"headerlink\" title=\"git status\"></a>git status</h3><p>查看文件是否被修改</p>\n<h3 id=\"git-diff\"><a href=\"#git-diff\" class=\"headerlink\" title=\"git diff\"></a>git diff</h3><p>查看文件修改内容</p>\n<h3 id=\"git-reflog\"><a href=\"#git-reflog\" class=\"headerlink\" title=\"git reflog\"></a>git reflog</h3><p>用来记录每一次的提交 </p>\n<h3 id=\"撤销工作区的修改-未add和commit的\"><a href=\"#撤销工作区的修改-未add和commit的\" class=\"headerlink\" title=\"撤销工作区的修改(未add和commit的)\"></a>撤销工作区的修改(未add和commit的)</h3><p>git checkout –file / git checkout – .</p>\n<h3 id=\"回退版本-git-reset\"><a href=\"#回退版本-git-reset\" class=\"headerlink\" title=\"回退版本-git reset\"></a>回退版本-git reset</h3><ul>\n<li><p>参数</p>\n<ul>\n<li>hard</li>\n<li>soft</li>\n<li>mixed</li>\n</ul>\n</li>\n<li><p>git reset –hard commit_id  </p>\n<p> git reset –hard：彻底回退到某个版本，本地的源码也会变为上一个版本的内容</p>\n</li>\n</ul>\n<h3 id=\"git-rm-file\"><a href=\"#git-rm-file\" class=\"headerlink\" title=\"git rm file\"></a>git rm file</h3><p> 删除一个文件</p>\n<h3 id=\"git-分支\"><a href=\"#git-分支\" class=\"headerlink\" title=\"git 分支\"></a>git 分支</h3><ul>\n<li>在本地,工作区只有一个,所以工作区所有的修改,只要没有提交到对应的分支上,会体现在所有的分支</li>\n<li>git add 将工作区的内容提交到暂存区</li>\n<li>git commit 将暂存区的内容提交到当前分支</li>\n<li>常用分支命令<ul>\n<li>git branch:查看分支</li>\n<li>git checkout branch-name: 切换分支</li>\n<li>git checkout -b name: 创建并且切换分支</li>\n<li>git branch -d branch-name: 删除分支</li>\n<li>git merge xxx:  将xxx分支的内容合并到当前分支</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"git-stash\"><a href=\"#git-stash\" class=\"headerlink\" title=\"git stash\"></a>git stash</h3><ul>\n<li>暂时存储当前工区的内容</li>\n<li>存储后,任何分支都没有之前的修改,因为没有add commit</li>\n<li>git stash操作的区域仍然是工作区,所以所有的分支都能读到暂存的内容</li>\n<li>暂存的常用命令<ul>\n<li>git stash list: 查看所有的stash内容</li>\n<li>git stash apply: 恢复stash内容</li>\n<li>git stash drop: 删除stash的内容</li>\n<li>git stash pop: 恢复并且删除stash的内容</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"git-tag\"><a href=\"#git-tag\" class=\"headerlink\" title=\"git tag\"></a>git tag</h3><p>打标签,方便回滚,这个主要哦针对一个完整功能上线时打一个tag,方便回滚到上一个功能(类似于-m的作用,只是-m针对每一次的提交)</p>\n<ul>\n<li>git tag: 控制台打印所有的标签</li>\n<li>git tag -l ‘V0.1*’: 搜索符合模式的tag</li>\n<li>打标签的常用命令<ul>\n<li>切换标签: git checkout tagname</li>\n<li>git tag -g v0.1.1.9fbc3d0 :给特定的commit打tag</li>\n<li>标签的发布: git push origin -tags # 说明</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"将本地文件夹关联远程仓库\"><a href=\"#将本地文件夹关联远程仓库\" class=\"headerlink\" title=\"将本地文件夹关联远程仓库\"></a>将本地文件夹关联远程仓库</h3><p>git remote add origin git@<a href=\"http://xujiao1989/xxx\" target=\"_blank\" rel=\"external\">http://xujiao1989/xxx</a></p>\n<h3 id=\"关于-gitignore\"><a href=\"#关于-gitignore\" class=\"headerlink\" title=\"关于.gitignore\"></a>关于.gitignore</h3><ul>\n<li>只能忽略那些原来没有被trace的文件</li>\n<li><p>如何解决添加规则后不生效的问题</p>\n<p>   git rm –cached file</p>\n</li>\n</ul>\n<h3 id=\"TIPS\"><a href=\"#TIPS\" class=\"headerlink\" title=\"TIPS\"></a>TIPS</h3><ul>\n<li>git跟踪的是修改,而不是文件</li>\n<li>在git当中,HEAD表示的是当前版本,上一个版本是HEAD^,上上个版本是HEAD^^,所以回退到上一个版本可以是git reset –hard HEAD^(这里也可以是特定的提交)</li>\n</ul>\n","excerpt":"","more":"<h3 id=\"强制从远程拉取最新代码\"><a href=\"#强制从远程拉取最新代码\" class=\"headerlink\" title=\"强制从远程拉取最新代码\"></a>强制从远程拉取最新代码</h3><pre><code>git reset --hard remote http://,,,,/origin/master\n</code></pre><h3 id=\"git-init\"><a href=\"#git-init\" class=\"headerlink\" title=\"git init\"></a>git init</h3><p>将当前的文件夹加入git的版本控制,该文件夹下默认会生成一个隐藏的.git文件夹,里面保存着各个分支各个版本的代码</p>\n<h3 id=\"git-status\"><a href=\"#git-status\" class=\"headerlink\" title=\"git status\"></a>git status</h3><p>查看文件是否被修改</p>\n<h3 id=\"git-diff\"><a href=\"#git-diff\" class=\"headerlink\" title=\"git diff\"></a>git diff</h3><p>查看文件修改内容</p>\n<h3 id=\"git-reflog\"><a href=\"#git-reflog\" class=\"headerlink\" title=\"git reflog\"></a>git reflog</h3><p>用来记录每一次的提交 </p>\n<h3 id=\"撤销工作区的修改-未add和commit的\"><a href=\"#撤销工作区的修改-未add和commit的\" class=\"headerlink\" title=\"撤销工作区的修改(未add和commit的)\"></a>撤销工作区的修改(未add和commit的)</h3><p>git checkout –file / git checkout – .</p>\n<h3 id=\"回退版本-git-reset\"><a href=\"#回退版本-git-reset\" class=\"headerlink\" title=\"回退版本-git reset\"></a>回退版本-git reset</h3><ul>\n<li><p>参数</p>\n<ul>\n<li>hard</li>\n<li>soft</li>\n<li>mixed</li>\n</ul>\n</li>\n<li><p>git reset –hard commit_id  </p>\n<p> git reset –hard：彻底回退到某个版本，本地的源码也会变为上一个版本的内容</p>\n</li>\n</ul>\n<h3 id=\"git-rm-file\"><a href=\"#git-rm-file\" class=\"headerlink\" title=\"git rm file\"></a>git rm file</h3><p> 删除一个文件</p>\n<h3 id=\"git-分支\"><a href=\"#git-分支\" class=\"headerlink\" title=\"git 分支\"></a>git 分支</h3><ul>\n<li>在本地,工作区只有一个,所以工作区所有的修改,只要没有提交到对应的分支上,会体现在所有的分支</li>\n<li>git add 将工作区的内容提交到暂存区</li>\n<li>git commit 将暂存区的内容提交到当前分支</li>\n<li>常用分支命令<ul>\n<li>git branch:查看分支</li>\n<li>git checkout branch-name: 切换分支</li>\n<li>git checkout -b name: 创建并且切换分支</li>\n<li>git branch -d branch-name: 删除分支</li>\n<li>git merge xxx:  将xxx分支的内容合并到当前分支</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"git-stash\"><a href=\"#git-stash\" class=\"headerlink\" title=\"git stash\"></a>git stash</h3><ul>\n<li>暂时存储当前工区的内容</li>\n<li>存储后,任何分支都没有之前的修改,因为没有add commit</li>\n<li>git stash操作的区域仍然是工作区,所以所有的分支都能读到暂存的内容</li>\n<li>暂存的常用命令<ul>\n<li>git stash list: 查看所有的stash内容</li>\n<li>git stash apply: 恢复stash内容</li>\n<li>git stash drop: 删除stash的内容</li>\n<li>git stash pop: 恢复并且删除stash的内容</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"git-tag\"><a href=\"#git-tag\" class=\"headerlink\" title=\"git tag\"></a>git tag</h3><p>打标签,方便回滚,这个主要哦针对一个完整功能上线时打一个tag,方便回滚到上一个功能(类似于-m的作用,只是-m针对每一次的提交)</p>\n<ul>\n<li>git tag: 控制台打印所有的标签</li>\n<li>git tag -l ‘V0.1*’: 搜索符合模式的tag</li>\n<li>打标签的常用命令<ul>\n<li>切换标签: git checkout tagname</li>\n<li>git tag -g v0.1.1.9fbc3d0 :给特定的commit打tag</li>\n<li>标签的发布: git push origin -tags # 说明</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"将本地文件夹关联远程仓库\"><a href=\"#将本地文件夹关联远程仓库\" class=\"headerlink\" title=\"将本地文件夹关联远程仓库\"></a>将本地文件夹关联远程仓库</h3><p>git remote add origin git@<a href=\"http://xujiao1989/xxx\">http://xujiao1989/xxx</a></p>\n<h3 id=\"关于-gitignore\"><a href=\"#关于-gitignore\" class=\"headerlink\" title=\"关于.gitignore\"></a>关于.gitignore</h3><ul>\n<li>只能忽略那些原来没有被trace的文件</li>\n<li><p>如何解决添加规则后不生效的问题</p>\n<p>   git rm –cached file</p>\n</li>\n</ul>\n<h3 id=\"TIPS\"><a href=\"#TIPS\" class=\"headerlink\" title=\"TIPS\"></a>TIPS</h3><ul>\n<li>git跟踪的是修改,而不是文件</li>\n<li>在git当中,HEAD表示的是当前版本,上一个版本是HEAD^,上上个版本是HEAD^^,所以回退到上一个版本可以是git reset –hard HEAD^(这里也可以是特定的提交)</li>\n</ul>\n"},{"title":"HTTP学习总结","date":"2017-02-21T16:00:00.000Z","_content":"\n前端工程师在面试过程中不可避免的会被问到是否知道http，讲真，似乎我们没有细究过http也好好的开发了很长一段时间。那为何越是大公司越会很注重你是否了解http呢。\n站在我们前端开发人员的角度，前后端通信几乎都是基于HTTP的，我们发送http请求，由RD接受请求处理后返回我们需要的资源。我们更深入的了解http到底是为了什么：\n+ `更好的定位问题：`我们发送一个请求之后，可以根据请求返回的状态码定位这次请求是否成功，如果没有成功是谁的问题\n+ `让前后端通信更快更安全：`在更深入的了解http请求后，我们就知道http通信的瓶颈在哪，有哪些行为会导致此次通信不安全、如何做可以让通信更快\n+ `用更好的方式去沟通：`不同的业务场景选用不同的方法沟通不仅仅提高可读性，也可以提高安全性、服务器处理的效率\n+ `应付面试：`很重要\n其实主要内容我还是从《HTTP权威指南》上抄的~\n\n## 简介\nhttp说的通俗一点，相当于客户端和服务器端的沟通语言。那么http协议简单来说包括哪些内容呢：\n1. 如何沟通：http报文，告诉客户端如何提出要求，服务器端应该怎样分析客户端的请求并给出响应的反应\n1. 沟通的高效性：http缓存、长连接等\n1. 沟通的安全性：https、客户端识别、cookie机制\n站在前端的角度来讲，我们常用的客户端是浏览器，服务器端可以是任何提供服务一个机器（废话）。\n\n## 如何沟通--http报文结构\n这个部分主要讲解客户端和服务器端应该遵循什么样的规范来沟通。他们都得遵循http报文规范。\n+ http报文是什么：简单的格式化数据块\n+ http报文包含3个部分\n\t+ 起始行：对报文进行描述\n\t+ 首部：包含一些属性\n\t+ 主体（可以没有）：包含数据主体\n##### 请求报文格式\n\t  method request-url version\n\t  headers\n\t  \n\t  entity-body\n\t  \n##### 响应报文格式\n    version status reason-phrase\n    headers\n    \n    entity-body\n    \n## method请求的方法\nHTTP规范总共定义了**7个**请求方法，为了告诉客户端，客户端想要执行什么动作。但不是每个服务器都实现了以下的方法。**HTTP1.1协议要求实现GET和HEAD方法**\n1. GET:从服务器端获取资源，没有实体\nHTTP1.1要求实现GET方法\n2. HEAD：从服务器获取资源的首部，没有实体\n与GET方法很类似，但是服务器在响应中只返回首部，不会返回实体的主体部分。HTTP1.1要求实现GET方法。HEAD方法可以用来：\t\t\n    + 在不获取资源的情况下，知道资源的情况（资源的类型）\n    + 通过查看资源的状态码，了解资源的存在情况\n    + 通过查看首部，看资源是否被修改了\t\t\n3. POST：向服务器发送需要处理的数据，**有实体**\n    在chrome的面板里，能看到POST请求的如下信息\n    ![POST请求带的数据](/images/post-data.png)\t\t\t\t\n4. PUT:将请求的主体部分放在服务器上，**有实体**\nPUT请求让服务器用PUT请求带的主体部分来创建一个由它所请求的url命名的新文档，如果文档已经存在，则覆盖它。PUT请求容许用户修改服务器的内容，所以从安全性角度来讲，应该要用户登录。\t\t\n5. TRACE：对可能经过的代理服务器传送到服务器上去的报文进行追踪，没有实体\n客户端发一个请求到达服务器时，可能会经过很多的代理服务器、防护墙、网关等等，中间每一个环节都有可能改变原来的HTTP请求。TRACE方法，容许客户端在最终发送请求到服务器端时，看看它变成了什么样子。最后一站的服务器会返回一个相关的响应，并在主体中携带上原始的请求报文。\t\t\n    + 优点：可以用于查看代理和其他的应用程序对用户请求的影响\n    + 缺点：它假定了中间程序对不同方法的请求处理方式是一致的。说到底我们还是不能保证中间代理和网关等对用户请求处理方式是一致的\n6. OPTIONS：决定（\"决定二字\"如何来理解？）可以在服务器上执行哪些方式，没有实体\nOPTIONS方式是希望服务器告诉我们，我们可以使用哪些方法，或者说对特殊资源支持哪些方法。\t\t\t\n7. DELETE：从服务器上删除一份文档，没有实体\n请求服务器端删除一个资源，但是不能保证这个请求一定会被执行，因为HTTP的规范容许服务器在不通知客户端的情况下撤销请求。\t\t\n8. 扩展方法\nHTTP被设计成字段可拓展的，这样可以向下兼容。但是我并不想看这块。\n\n## 请求的URL简单介绍\nURL提供了统一的资源命名方式：方案：//服务器位置//路径。URL的语法会由于方案的不同而不同,几乎没有哪个URL中包含了所以所有的组件：scheme://user:pwd@host:port/path;params?query#frag\n1. params参数\n一个URL中可以有多个参数，参数为键值对，各个参数之间以及参数与URL其他部分之间用逗号分隔\t\t\n1. query\n查询组件的内容没有通用的格式，用字符“？”将其与URL的其余部分分隔开\n\n##### 方案：例如HTTP/FTP/SMTP\n方案名不区分大小写,告诉应用程序应该使用什么协议\t\t\n## 版本\n格式类似于HTTP/1.1,HTTP/2.0,是为了服务器和客户端之间相互了解各自的能力和报文的格式。版本号说明了应用程序支持的最高的HTTP版本。版本号不会被当做小数来处理，所以HTTP2.22比HTTP2.3的版本要高，因为22>3\n## 状态码\n状态码配合原因短语一起告诉客户端他的请求处于什么状态,目前有5个种类的状态码\n+ 100~199:信息类状态码(目前实现了2个)\n+ 200~299:成功类状态码(目前实现了7个)\n+ 300~399:重定向类状态码(目前实现了7个)\n+ 400~499:客户端失败状态码(目前实现了18个)\n+ 500~599:服务器端状态码(目前实现了6个)\n\n##### 信息类状态码\n这类型状态码是http1.1引入的,都比较新也比较受争议,所以目前只实现了2个:\n1. 100 Continue\n说明服务器端已经收到部分请求,请求客户端继续。那么为什么我们需要这个状态码: http客户端应用程序要发给服务器一个实体的主体,但是在发送前想知道服务器端是否接受服务器端只有接受到带有值为100 continue的expires请求头时才会返回100状态码,\n1. 101 switching protocols\n说明服务器根据客户端的请示,将协议切换成update首部所列的协议\n\n##### 成功类状态码\n目前已经实现了7个(200~206)\n1. 200 OK\n请求没有问题,响应的实体主体部分包含请求的资源\n1. 201 created\n主要用来创建服务器端请求(PUT)\n服务器在返回改状态码前必须已经创建好对象\n响应的主体部分应该包含各组引用了已创建的资源的URL\n1. 202 Accept\n请求已经被接受,但是服务器还未对该请求做任何处理也不能保证服务器能完成这个请求\n返回的实体主体部分包含对该请求的状态描述,或者也可以加上对请求完成时间的估计\n1. 203 None-Authoritative Information\n实体的信息不是来自于服务器端,而是来自于资源的一个副本\n如中间节点上有一份资源副本,但无法或者对发送资源进行验证就可以发送这个状态码\n1. 204 No content\n响应中包含起始行和首部,但是每天实体的主体部分\n主要用于浏览器不转为显示新文档的情况下对其进行更新\n1. 205 Reset content\n也是主要用于浏览器\n用于告知浏览器清空所以得HTML元素\n1. 206 partial content \n成功的执行了一个range请求\n206响应必须包含以下几个响应\n+ Content-range\n+ Date\n+ ETag\n+ Content-Location\n\n##### 重定向类状态码(目前实现了7个)\n1. 300 Multiple Choice\n请求的url对应多个资源(中文、英文等)会返回该状态码\n服务器可以在响应的location首部给出首选的URL\n1. 301 Moved permanently\n表示请求的资源已经转移\n响应的location头部应该包含资源的新URL\n1. 302 Found\n与301类似,客户端使用响应的location首部来临时定位资源\n以后还是会使用来的URL定位资源\n1. 303 See Other\n告知客户端使用另一个URL来访问资源\n新的URL位于响应的location首部\n主要目的是容许post请求将客户端定位到某个资源上\n讲真,我已经晕了\n1. 304 Not Found\n这个我倒是经常遇到,传说中的条件缓存\n客户端的条件get请求,资源未被修改\n响应的实体不包含主体部分\n1. 305 use proxy\n必须通过代理来访问资源,代理的位置在响应的location首部\n1. 306 未使用\n1. 307 Temporary Redirect\n临时的重定向,类似于301,但响应中给出的是临时的url\n以后还是使用老的url来访问资源\n\n##### 服务器端错误状态码\n目前实现了6个\n1. 500 Internal server error\n遇到妨碍服务器提供服务的内部错误时返回\n1. 501 Not implemented\n客户端发起的请求超出了服务器的能力范围,例如使用了服务器不支持的方法\n1. 502 bad gateway\n代理在请求的响应链的下一条链时返回一个伪响应(如无法连接父代理)\n测试过程中,测试服务器挂了会报这个错误类型\n1. 503 service unavailable\n表示服务器现在没办法为请求提供服务,但是未来可以\n如果服务器知道什么时候能够用,可以在响应中返回一个包含retry-after首部\n1. 504 gateway timeout \n类似于408,这里的响应来自于网关或者代理\n在等服务器等待请求进行响应时超时了\n1. 505 http version not support\n\n\n\n## 学习时间线\n\n##### 2017-02-27\n\n+ http简介\n+ http报文结构\n+ url\n+ 请求的方法\n\n##### 2017-03-01\n\n+ 状态码 (信息类状态码、成功类状态码、重定向类状态码、服务器端错误状态码)\n\n\n## 鸡汤\n\n做一个勤于思考的人~\n\n\n","source":"_posts/网络/HTTP简介.md","raw":"---\ntitle: HTTP学习总结\ndate: 2017-02-22\ntags:\n  - 前端开发\n  - HTTP学习总结\ncategories: 网络\n---\n\n前端工程师在面试过程中不可避免的会被问到是否知道http，讲真，似乎我们没有细究过http也好好的开发了很长一段时间。那为何越是大公司越会很注重你是否了解http呢。\n站在我们前端开发人员的角度，前后端通信几乎都是基于HTTP的，我们发送http请求，由RD接受请求处理后返回我们需要的资源。我们更深入的了解http到底是为了什么：\n+ `更好的定位问题：`我们发送一个请求之后，可以根据请求返回的状态码定位这次请求是否成功，如果没有成功是谁的问题\n+ `让前后端通信更快更安全：`在更深入的了解http请求后，我们就知道http通信的瓶颈在哪，有哪些行为会导致此次通信不安全、如何做可以让通信更快\n+ `用更好的方式去沟通：`不同的业务场景选用不同的方法沟通不仅仅提高可读性，也可以提高安全性、服务器处理的效率\n+ `应付面试：`很重要\n其实主要内容我还是从《HTTP权威指南》上抄的~\n\n## 简介\nhttp说的通俗一点，相当于客户端和服务器端的沟通语言。那么http协议简单来说包括哪些内容呢：\n1. 如何沟通：http报文，告诉客户端如何提出要求，服务器端应该怎样分析客户端的请求并给出响应的反应\n1. 沟通的高效性：http缓存、长连接等\n1. 沟通的安全性：https、客户端识别、cookie机制\n站在前端的角度来讲，我们常用的客户端是浏览器，服务器端可以是任何提供服务一个机器（废话）。\n\n## 如何沟通--http报文结构\n这个部分主要讲解客户端和服务器端应该遵循什么样的规范来沟通。他们都得遵循http报文规范。\n+ http报文是什么：简单的格式化数据块\n+ http报文包含3个部分\n\t+ 起始行：对报文进行描述\n\t+ 首部：包含一些属性\n\t+ 主体（可以没有）：包含数据主体\n##### 请求报文格式\n\t  method request-url version\n\t  headers\n\t  \n\t  entity-body\n\t  \n##### 响应报文格式\n    version status reason-phrase\n    headers\n    \n    entity-body\n    \n## method请求的方法\nHTTP规范总共定义了**7个**请求方法，为了告诉客户端，客户端想要执行什么动作。但不是每个服务器都实现了以下的方法。**HTTP1.1协议要求实现GET和HEAD方法**\n1. GET:从服务器端获取资源，没有实体\nHTTP1.1要求实现GET方法\n2. HEAD：从服务器获取资源的首部，没有实体\n与GET方法很类似，但是服务器在响应中只返回首部，不会返回实体的主体部分。HTTP1.1要求实现GET方法。HEAD方法可以用来：\t\t\n    + 在不获取资源的情况下，知道资源的情况（资源的类型）\n    + 通过查看资源的状态码，了解资源的存在情况\n    + 通过查看首部，看资源是否被修改了\t\t\n3. POST：向服务器发送需要处理的数据，**有实体**\n    在chrome的面板里，能看到POST请求的如下信息\n    ![POST请求带的数据](/images/post-data.png)\t\t\t\t\n4. PUT:将请求的主体部分放在服务器上，**有实体**\nPUT请求让服务器用PUT请求带的主体部分来创建一个由它所请求的url命名的新文档，如果文档已经存在，则覆盖它。PUT请求容许用户修改服务器的内容，所以从安全性角度来讲，应该要用户登录。\t\t\n5. TRACE：对可能经过的代理服务器传送到服务器上去的报文进行追踪，没有实体\n客户端发一个请求到达服务器时，可能会经过很多的代理服务器、防护墙、网关等等，中间每一个环节都有可能改变原来的HTTP请求。TRACE方法，容许客户端在最终发送请求到服务器端时，看看它变成了什么样子。最后一站的服务器会返回一个相关的响应，并在主体中携带上原始的请求报文。\t\t\n    + 优点：可以用于查看代理和其他的应用程序对用户请求的影响\n    + 缺点：它假定了中间程序对不同方法的请求处理方式是一致的。说到底我们还是不能保证中间代理和网关等对用户请求处理方式是一致的\n6. OPTIONS：决定（\"决定二字\"如何来理解？）可以在服务器上执行哪些方式，没有实体\nOPTIONS方式是希望服务器告诉我们，我们可以使用哪些方法，或者说对特殊资源支持哪些方法。\t\t\t\n7. DELETE：从服务器上删除一份文档，没有实体\n请求服务器端删除一个资源，但是不能保证这个请求一定会被执行，因为HTTP的规范容许服务器在不通知客户端的情况下撤销请求。\t\t\n8. 扩展方法\nHTTP被设计成字段可拓展的，这样可以向下兼容。但是我并不想看这块。\n\n## 请求的URL简单介绍\nURL提供了统一的资源命名方式：方案：//服务器位置//路径。URL的语法会由于方案的不同而不同,几乎没有哪个URL中包含了所以所有的组件：scheme://user:pwd@host:port/path;params?query#frag\n1. params参数\n一个URL中可以有多个参数，参数为键值对，各个参数之间以及参数与URL其他部分之间用逗号分隔\t\t\n1. query\n查询组件的内容没有通用的格式，用字符“？”将其与URL的其余部分分隔开\n\n##### 方案：例如HTTP/FTP/SMTP\n方案名不区分大小写,告诉应用程序应该使用什么协议\t\t\n## 版本\n格式类似于HTTP/1.1,HTTP/2.0,是为了服务器和客户端之间相互了解各自的能力和报文的格式。版本号说明了应用程序支持的最高的HTTP版本。版本号不会被当做小数来处理，所以HTTP2.22比HTTP2.3的版本要高，因为22>3\n## 状态码\n状态码配合原因短语一起告诉客户端他的请求处于什么状态,目前有5个种类的状态码\n+ 100~199:信息类状态码(目前实现了2个)\n+ 200~299:成功类状态码(目前实现了7个)\n+ 300~399:重定向类状态码(目前实现了7个)\n+ 400~499:客户端失败状态码(目前实现了18个)\n+ 500~599:服务器端状态码(目前实现了6个)\n\n##### 信息类状态码\n这类型状态码是http1.1引入的,都比较新也比较受争议,所以目前只实现了2个:\n1. 100 Continue\n说明服务器端已经收到部分请求,请求客户端继续。那么为什么我们需要这个状态码: http客户端应用程序要发给服务器一个实体的主体,但是在发送前想知道服务器端是否接受服务器端只有接受到带有值为100 continue的expires请求头时才会返回100状态码,\n1. 101 switching protocols\n说明服务器根据客户端的请示,将协议切换成update首部所列的协议\n\n##### 成功类状态码\n目前已经实现了7个(200~206)\n1. 200 OK\n请求没有问题,响应的实体主体部分包含请求的资源\n1. 201 created\n主要用来创建服务器端请求(PUT)\n服务器在返回改状态码前必须已经创建好对象\n响应的主体部分应该包含各组引用了已创建的资源的URL\n1. 202 Accept\n请求已经被接受,但是服务器还未对该请求做任何处理也不能保证服务器能完成这个请求\n返回的实体主体部分包含对该请求的状态描述,或者也可以加上对请求完成时间的估计\n1. 203 None-Authoritative Information\n实体的信息不是来自于服务器端,而是来自于资源的一个副本\n如中间节点上有一份资源副本,但无法或者对发送资源进行验证就可以发送这个状态码\n1. 204 No content\n响应中包含起始行和首部,但是每天实体的主体部分\n主要用于浏览器不转为显示新文档的情况下对其进行更新\n1. 205 Reset content\n也是主要用于浏览器\n用于告知浏览器清空所以得HTML元素\n1. 206 partial content \n成功的执行了一个range请求\n206响应必须包含以下几个响应\n+ Content-range\n+ Date\n+ ETag\n+ Content-Location\n\n##### 重定向类状态码(目前实现了7个)\n1. 300 Multiple Choice\n请求的url对应多个资源(中文、英文等)会返回该状态码\n服务器可以在响应的location首部给出首选的URL\n1. 301 Moved permanently\n表示请求的资源已经转移\n响应的location头部应该包含资源的新URL\n1. 302 Found\n与301类似,客户端使用响应的location首部来临时定位资源\n以后还是会使用来的URL定位资源\n1. 303 See Other\n告知客户端使用另一个URL来访问资源\n新的URL位于响应的location首部\n主要目的是容许post请求将客户端定位到某个资源上\n讲真,我已经晕了\n1. 304 Not Found\n这个我倒是经常遇到,传说中的条件缓存\n客户端的条件get请求,资源未被修改\n响应的实体不包含主体部分\n1. 305 use proxy\n必须通过代理来访问资源,代理的位置在响应的location首部\n1. 306 未使用\n1. 307 Temporary Redirect\n临时的重定向,类似于301,但响应中给出的是临时的url\n以后还是使用老的url来访问资源\n\n##### 服务器端错误状态码\n目前实现了6个\n1. 500 Internal server error\n遇到妨碍服务器提供服务的内部错误时返回\n1. 501 Not implemented\n客户端发起的请求超出了服务器的能力范围,例如使用了服务器不支持的方法\n1. 502 bad gateway\n代理在请求的响应链的下一条链时返回一个伪响应(如无法连接父代理)\n测试过程中,测试服务器挂了会报这个错误类型\n1. 503 service unavailable\n表示服务器现在没办法为请求提供服务,但是未来可以\n如果服务器知道什么时候能够用,可以在响应中返回一个包含retry-after首部\n1. 504 gateway timeout \n类似于408,这里的响应来自于网关或者代理\n在等服务器等待请求进行响应时超时了\n1. 505 http version not support\n\n\n\n## 学习时间线\n\n##### 2017-02-27\n\n+ http简介\n+ http报文结构\n+ url\n+ 请求的方法\n\n##### 2017-03-01\n\n+ 状态码 (信息类状态码、成功类状态码、重定向类状态码、服务器端错误状态码)\n\n\n## 鸡汤\n\n做一个勤于思考的人~\n\n\n","slug":"网络/HTTP简介","published":1,"updated":"2017-03-13T00:32:30.000Z","comments":1,"layout":"post","photos":[],"link":"","_id":"cj07m5sf2001br6xlwpdnyfu8","content":"<p>前端工程师在面试过程中不可避免的会被问到是否知道http，讲真，似乎我们没有细究过http也好好的开发了很长一段时间。那为何越是大公司越会很注重你是否了解http呢。<br>站在我们前端开发人员的角度，前后端通信几乎都是基于HTTP的，我们发送http请求，由RD接受请求处理后返回我们需要的资源。我们更深入的了解http到底是为了什么：</p>\n<ul>\n<li><code>更好的定位问题：</code>我们发送一个请求之后，可以根据请求返回的状态码定位这次请求是否成功，如果没有成功是谁的问题</li>\n<li><code>让前后端通信更快更安全：</code>在更深入的了解http请求后，我们就知道http通信的瓶颈在哪，有哪些行为会导致此次通信不安全、如何做可以让通信更快</li>\n<li><code>用更好的方式去沟通：</code>不同的业务场景选用不同的方法沟通不仅仅提高可读性，也可以提高安全性、服务器处理的效率</li>\n<li><code>应付面试：</code>很重要<br>其实主要内容我还是从《HTTP权威指南》上抄的~</li>\n</ul>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>http说的通俗一点，相当于客户端和服务器端的沟通语言。那么http协议简单来说包括哪些内容呢：</p>\n<ol>\n<li>如何沟通：http报文，告诉客户端如何提出要求，服务器端应该怎样分析客户端的请求并给出响应的反应</li>\n<li>沟通的高效性：http缓存、长连接等</li>\n<li>沟通的安全性：https、客户端识别、cookie机制<br>站在前端的角度来讲，我们常用的客户端是浏览器，服务器端可以是任何提供服务一个机器（废话）。</li>\n</ol>\n<h2 id=\"如何沟通–http报文结构\"><a href=\"#如何沟通–http报文结构\" class=\"headerlink\" title=\"如何沟通–http报文结构\"></a>如何沟通–http报文结构</h2><p>这个部分主要讲解客户端和服务器端应该遵循什么样的规范来沟通。他们都得遵循http报文规范。</p>\n<ul>\n<li>http报文是什么：简单的格式化数据块</li>\n<li><p>http报文包含3个部分</p>\n<ul>\n<li>起始行：对报文进行描述</li>\n<li>首部：包含一些属性</li>\n<li><p>主体（可以没有）：包含数据主体</p>\n<h5 id=\"请求报文格式\"><a href=\"#请求报文格式\" class=\"headerlink\" title=\"请求报文格式\"></a>请求报文格式</h5><p>method request-url version<br>headers</p>\n<p>entity-body</p>\n</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"响应报文格式\"><a href=\"#响应报文格式\" class=\"headerlink\" title=\"响应报文格式\"></a>响应报文格式</h5><pre><code>version status reason-phrase\nheaders\n\nentity-body\n</code></pre><h2 id=\"method请求的方法\"><a href=\"#method请求的方法\" class=\"headerlink\" title=\"method请求的方法\"></a>method请求的方法</h2><p>HTTP规范总共定义了<strong>7个</strong>请求方法，为了告诉客户端，客户端想要执行什么动作。但不是每个服务器都实现了以下的方法。<strong>HTTP1.1协议要求实现GET和HEAD方法</strong></p>\n<ol>\n<li>GET:从服务器端获取资源，没有实体<br>HTTP1.1要求实现GET方法</li>\n<li>HEAD：从服务器获取资源的首部，没有实体<br>与GET方法很类似，但是服务器在响应中只返回首部，不会返回实体的主体部分。HTTP1.1要求实现GET方法。HEAD方法可以用来：        <ul>\n<li>在不获取资源的情况下，知道资源的情况（资源的类型）</li>\n<li>通过查看资源的状态码，了解资源的存在情况</li>\n<li>通过查看首部，看资源是否被修改了        </li>\n</ul>\n</li>\n<li>POST：向服务器发送需要处理的数据，<strong>有实体</strong><br> 在chrome的面板里，能看到POST请求的如下信息<br> <img src=\"/images/post-data.png\" alt=\"POST请求带的数据\">                </li>\n<li>PUT:将请求的主体部分放在服务器上，<strong>有实体</strong><br>PUT请求让服务器用PUT请求带的主体部分来创建一个由它所请求的url命名的新文档，如果文档已经存在，则覆盖它。PUT请求容许用户修改服务器的内容，所以从安全性角度来讲，应该要用户登录。        </li>\n<li>TRACE：对可能经过的代理服务器传送到服务器上去的报文进行追踪，没有实体<br>客户端发一个请求到达服务器时，可能会经过很多的代理服务器、防护墙、网关等等，中间每一个环节都有可能改变原来的HTTP请求。TRACE方法，容许客户端在最终发送请求到服务器端时，看看它变成了什么样子。最后一站的服务器会返回一个相关的响应，并在主体中携带上原始的请求报文。        <ul>\n<li>优点：可以用于查看代理和其他的应用程序对用户请求的影响</li>\n<li>缺点：它假定了中间程序对不同方法的请求处理方式是一致的。说到底我们还是不能保证中间代理和网关等对用户请求处理方式是一致的</li>\n</ul>\n</li>\n<li>OPTIONS：决定（”决定二字”如何来理解？）可以在服务器上执行哪些方式，没有实体<br>OPTIONS方式是希望服务器告诉我们，我们可以使用哪些方法，或者说对特殊资源支持哪些方法。            </li>\n<li>DELETE：从服务器上删除一份文档，没有实体<br>请求服务器端删除一个资源，但是不能保证这个请求一定会被执行，因为HTTP的规范容许服务器在不通知客户端的情况下撤销请求。        </li>\n<li>扩展方法<br>HTTP被设计成字段可拓展的，这样可以向下兼容。但是我并不想看这块。</li>\n</ol>\n<h2 id=\"请求的URL简单介绍\"><a href=\"#请求的URL简单介绍\" class=\"headerlink\" title=\"请求的URL简单介绍\"></a>请求的URL简单介绍</h2><p>URL提供了统一的资源命名方式：方案：//服务器位置//路径。URL的语法会由于方案的不同而不同,几乎没有哪个URL中包含了所以所有的组件：scheme://user:pwd@host:port/path;params?query#frag</p>\n<ol>\n<li>params参数<br>一个URL中可以有多个参数，参数为键值对，各个参数之间以及参数与URL其他部分之间用逗号分隔        </li>\n<li>query<br>查询组件的内容没有通用的格式，用字符“？”将其与URL的其余部分分隔开</li>\n</ol>\n<h5 id=\"方案：例如HTTP-FTP-SMTP\"><a href=\"#方案：例如HTTP-FTP-SMTP\" class=\"headerlink\" title=\"方案：例如HTTP/FTP/SMTP\"></a>方案：例如HTTP/FTP/SMTP</h5><p>方案名不区分大小写,告诉应用程序应该使用什么协议        </p>\n<h2 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h2><p>格式类似于HTTP/1.1,HTTP/2.0,是为了服务器和客户端之间相互了解各自的能力和报文的格式。版本号说明了应用程序支持的最高的HTTP版本。版本号不会被当做小数来处理，所以HTTP2.22比HTTP2.3的版本要高，因为22&gt;3</p>\n<h2 id=\"状态码\"><a href=\"#状态码\" class=\"headerlink\" title=\"状态码\"></a>状态码</h2><p>状态码配合原因短语一起告诉客户端他的请求处于什么状态,目前有5个种类的状态码</p>\n<ul>\n<li>100~199:信息类状态码(目前实现了2个)</li>\n<li>200~299:成功类状态码(目前实现了7个)</li>\n<li>300~399:重定向类状态码(目前实现了7个)</li>\n<li>400~499:客户端失败状态码(目前实现了18个)</li>\n<li>500~599:服务器端状态码(目前实现了6个)</li>\n</ul>\n<h5 id=\"信息类状态码\"><a href=\"#信息类状态码\" class=\"headerlink\" title=\"信息类状态码\"></a>信息类状态码</h5><p>这类型状态码是http1.1引入的,都比较新也比较受争议,所以目前只实现了2个:</p>\n<ol>\n<li>100 Continue<br>说明服务器端已经收到部分请求,请求客户端继续。那么为什么我们需要这个状态码: http客户端应用程序要发给服务器一个实体的主体,但是在发送前想知道服务器端是否接受服务器端只有接受到带有值为100 continue的expires请求头时才会返回100状态码,</li>\n<li>101 switching protocols<br>说明服务器根据客户端的请示,将协议切换成update首部所列的协议</li>\n</ol>\n<h5 id=\"成功类状态码\"><a href=\"#成功类状态码\" class=\"headerlink\" title=\"成功类状态码\"></a>成功类状态码</h5><p>目前已经实现了7个(200~206)</p>\n<ol>\n<li>200 OK<br>请求没有问题,响应的实体主体部分包含请求的资源</li>\n<li>201 created<br>主要用来创建服务器端请求(PUT)<br>服务器在返回改状态码前必须已经创建好对象<br>响应的主体部分应该包含各组引用了已创建的资源的URL</li>\n<li>202 Accept<br>请求已经被接受,但是服务器还未对该请求做任何处理也不能保证服务器能完成这个请求<br>返回的实体主体部分包含对该请求的状态描述,或者也可以加上对请求完成时间的估计</li>\n<li>203 None-Authoritative Information<br>实体的信息不是来自于服务器端,而是来自于资源的一个副本<br>如中间节点上有一份资源副本,但无法或者对发送资源进行验证就可以发送这个状态码</li>\n<li>204 No content<br>响应中包含起始行和首部,但是每天实体的主体部分<br>主要用于浏览器不转为显示新文档的情况下对其进行更新</li>\n<li>205 Reset content<br>也是主要用于浏览器<br>用于告知浏览器清空所以得HTML元素</li>\n<li>206 partial content<br>成功的执行了一个range请求<br>206响应必须包含以下几个响应</li>\n</ol>\n<ul>\n<li>Content-range</li>\n<li>Date</li>\n<li>ETag</li>\n<li>Content-Location</li>\n</ul>\n<h5 id=\"重定向类状态码-目前实现了7个\"><a href=\"#重定向类状态码-目前实现了7个\" class=\"headerlink\" title=\"重定向类状态码(目前实现了7个)\"></a>重定向类状态码(目前实现了7个)</h5><ol>\n<li>300 Multiple Choice<br>请求的url对应多个资源(中文、英文等)会返回该状态码<br>服务器可以在响应的location首部给出首选的URL</li>\n<li>301 Moved permanently<br>表示请求的资源已经转移<br>响应的location头部应该包含资源的新URL</li>\n<li>302 Found<br>与301类似,客户端使用响应的location首部来临时定位资源<br>以后还是会使用来的URL定位资源</li>\n<li>303 See Other<br>告知客户端使用另一个URL来访问资源<br>新的URL位于响应的location首部<br>主要目的是容许post请求将客户端定位到某个资源上<br>讲真,我已经晕了</li>\n<li>304 Not Found<br>这个我倒是经常遇到,传说中的条件缓存<br>客户端的条件get请求,资源未被修改<br>响应的实体不包含主体部分</li>\n<li>305 use proxy<br>必须通过代理来访问资源,代理的位置在响应的location首部</li>\n<li>306 未使用</li>\n<li>307 Temporary Redirect<br>临时的重定向,类似于301,但响应中给出的是临时的url<br>以后还是使用老的url来访问资源</li>\n</ol>\n<h5 id=\"服务器端错误状态码\"><a href=\"#服务器端错误状态码\" class=\"headerlink\" title=\"服务器端错误状态码\"></a>服务器端错误状态码</h5><p>目前实现了6个</p>\n<ol>\n<li>500 Internal server error<br>遇到妨碍服务器提供服务的内部错误时返回</li>\n<li>501 Not implemented<br>客户端发起的请求超出了服务器的能力范围,例如使用了服务器不支持的方法</li>\n<li>502 bad gateway<br>代理在请求的响应链的下一条链时返回一个伪响应(如无法连接父代理)<br>测试过程中,测试服务器挂了会报这个错误类型</li>\n<li>503 service unavailable<br>表示服务器现在没办法为请求提供服务,但是未来可以<br>如果服务器知道什么时候能够用,可以在响应中返回一个包含retry-after首部</li>\n<li>504 gateway timeout<br>类似于408,这里的响应来自于网关或者代理<br>在等服务器等待请求进行响应时超时了</li>\n<li>505 http version not support</li>\n</ol>\n<h2 id=\"学习时间线\"><a href=\"#学习时间线\" class=\"headerlink\" title=\"学习时间线\"></a>学习时间线</h2><h5 id=\"2017-02-27\"><a href=\"#2017-02-27\" class=\"headerlink\" title=\"2017-02-27\"></a>2017-02-27</h5><ul>\n<li>http简介</li>\n<li>http报文结构</li>\n<li>url</li>\n<li>请求的方法</li>\n</ul>\n<h5 id=\"2017-03-01\"><a href=\"#2017-03-01\" class=\"headerlink\" title=\"2017-03-01\"></a>2017-03-01</h5><ul>\n<li>状态码 (信息类状态码、成功类状态码、重定向类状态码、服务器端错误状态码)</li>\n</ul>\n<h2 id=\"鸡汤\"><a href=\"#鸡汤\" class=\"headerlink\" title=\"鸡汤\"></a>鸡汤</h2><p>做一个勤于思考的人~</p>\n","excerpt":"","more":"<p>前端工程师在面试过程中不可避免的会被问到是否知道http，讲真，似乎我们没有细究过http也好好的开发了很长一段时间。那为何越是大公司越会很注重你是否了解http呢。<br>站在我们前端开发人员的角度，前后端通信几乎都是基于HTTP的，我们发送http请求，由RD接受请求处理后返回我们需要的资源。我们更深入的了解http到底是为了什么：</p>\n<ul>\n<li><code>更好的定位问题：</code>我们发送一个请求之后，可以根据请求返回的状态码定位这次请求是否成功，如果没有成功是谁的问题</li>\n<li><code>让前后端通信更快更安全：</code>在更深入的了解http请求后，我们就知道http通信的瓶颈在哪，有哪些行为会导致此次通信不安全、如何做可以让通信更快</li>\n<li><code>用更好的方式去沟通：</code>不同的业务场景选用不同的方法沟通不仅仅提高可读性，也可以提高安全性、服务器处理的效率</li>\n<li><code>应付面试：</code>很重要<br>其实主要内容我还是从《HTTP权威指南》上抄的~</li>\n</ul>\n<h2 id=\"简介\"><a href=\"#简介\" class=\"headerlink\" title=\"简介\"></a>简介</h2><p>http说的通俗一点，相当于客户端和服务器端的沟通语言。那么http协议简单来说包括哪些内容呢：</p>\n<ol>\n<li>如何沟通：http报文，告诉客户端如何提出要求，服务器端应该怎样分析客户端的请求并给出响应的反应</li>\n<li>沟通的高效性：http缓存、长连接等</li>\n<li>沟通的安全性：https、客户端识别、cookie机制<br>站在前端的角度来讲，我们常用的客户端是浏览器，服务器端可以是任何提供服务一个机器（废话）。</li>\n</ol>\n<h2 id=\"如何沟通–http报文结构\"><a href=\"#如何沟通–http报文结构\" class=\"headerlink\" title=\"如何沟通–http报文结构\"></a>如何沟通–http报文结构</h2><p>这个部分主要讲解客户端和服务器端应该遵循什么样的规范来沟通。他们都得遵循http报文规范。</p>\n<ul>\n<li>http报文是什么：简单的格式化数据块</li>\n<li><p>http报文包含3个部分</p>\n<ul>\n<li>起始行：对报文进行描述</li>\n<li>首部：包含一些属性</li>\n<li><p>主体（可以没有）：包含数据主体</p>\n<h5 id=\"请求报文格式\"><a href=\"#请求报文格式\" class=\"headerlink\" title=\"请求报文格式\"></a>请求报文格式</h5><p>method request-url version<br>headers</p>\n<p>entity-body</p>\n</li>\n</ul>\n</li>\n</ul>\n<h5 id=\"响应报文格式\"><a href=\"#响应报文格式\" class=\"headerlink\" title=\"响应报文格式\"></a>响应报文格式</h5><pre><code>version status reason-phrase\nheaders\n\nentity-body\n</code></pre><h2 id=\"method请求的方法\"><a href=\"#method请求的方法\" class=\"headerlink\" title=\"method请求的方法\"></a>method请求的方法</h2><p>HTTP规范总共定义了<strong>7个</strong>请求方法，为了告诉客户端，客户端想要执行什么动作。但不是每个服务器都实现了以下的方法。<strong>HTTP1.1协议要求实现GET和HEAD方法</strong></p>\n<ol>\n<li>GET:从服务器端获取资源，没有实体<br>HTTP1.1要求实现GET方法</li>\n<li>HEAD：从服务器获取资源的首部，没有实体<br>与GET方法很类似，但是服务器在响应中只返回首部，不会返回实体的主体部分。HTTP1.1要求实现GET方法。HEAD方法可以用来：        <ul>\n<li>在不获取资源的情况下，知道资源的情况（资源的类型）</li>\n<li>通过查看资源的状态码，了解资源的存在情况</li>\n<li>通过查看首部，看资源是否被修改了        </li>\n</ul>\n</li>\n<li>POST：向服务器发送需要处理的数据，<strong>有实体</strong><br> 在chrome的面板里，能看到POST请求的如下信息<br> <img src=\"/images/post-data.png\" alt=\"POST请求带的数据\">                </li>\n<li>PUT:将请求的主体部分放在服务器上，<strong>有实体</strong><br>PUT请求让服务器用PUT请求带的主体部分来创建一个由它所请求的url命名的新文档，如果文档已经存在，则覆盖它。PUT请求容许用户修改服务器的内容，所以从安全性角度来讲，应该要用户登录。        </li>\n<li>TRACE：对可能经过的代理服务器传送到服务器上去的报文进行追踪，没有实体<br>客户端发一个请求到达服务器时，可能会经过很多的代理服务器、防护墙、网关等等，中间每一个环节都有可能改变原来的HTTP请求。TRACE方法，容许客户端在最终发送请求到服务器端时，看看它变成了什么样子。最后一站的服务器会返回一个相关的响应，并在主体中携带上原始的请求报文。        <ul>\n<li>优点：可以用于查看代理和其他的应用程序对用户请求的影响</li>\n<li>缺点：它假定了中间程序对不同方法的请求处理方式是一致的。说到底我们还是不能保证中间代理和网关等对用户请求处理方式是一致的</li>\n</ul>\n</li>\n<li>OPTIONS：决定（”决定二字”如何来理解？）可以在服务器上执行哪些方式，没有实体<br>OPTIONS方式是希望服务器告诉我们，我们可以使用哪些方法，或者说对特殊资源支持哪些方法。            </li>\n<li>DELETE：从服务器上删除一份文档，没有实体<br>请求服务器端删除一个资源，但是不能保证这个请求一定会被执行，因为HTTP的规范容许服务器在不通知客户端的情况下撤销请求。        </li>\n<li>扩展方法<br>HTTP被设计成字段可拓展的，这样可以向下兼容。但是我并不想看这块。</li>\n</ol>\n<h2 id=\"请求的URL简单介绍\"><a href=\"#请求的URL简单介绍\" class=\"headerlink\" title=\"请求的URL简单介绍\"></a>请求的URL简单介绍</h2><p>URL提供了统一的资源命名方式：方案：//服务器位置//路径。URL的语法会由于方案的不同而不同,几乎没有哪个URL中包含了所以所有的组件：scheme://user:pwd@host:port/path;params?query#frag</p>\n<ol>\n<li>params参数<br>一个URL中可以有多个参数，参数为键值对，各个参数之间以及参数与URL其他部分之间用逗号分隔        </li>\n<li>query<br>查询组件的内容没有通用的格式，用字符“？”将其与URL的其余部分分隔开</li>\n</ol>\n<h5 id=\"方案：例如HTTP-FTP-SMTP\"><a href=\"#方案：例如HTTP-FTP-SMTP\" class=\"headerlink\" title=\"方案：例如HTTP/FTP/SMTP\"></a>方案：例如HTTP/FTP/SMTP</h5><p>方案名不区分大小写,告诉应用程序应该使用什么协议        </p>\n<h2 id=\"版本\"><a href=\"#版本\" class=\"headerlink\" title=\"版本\"></a>版本</h2><p>格式类似于HTTP/1.1,HTTP/2.0,是为了服务器和客户端之间相互了解各自的能力和报文的格式。版本号说明了应用程序支持的最高的HTTP版本。版本号不会被当做小数来处理，所以HTTP2.22比HTTP2.3的版本要高，因为22&gt;3</p>\n<h2 id=\"状态码\"><a href=\"#状态码\" class=\"headerlink\" title=\"状态码\"></a>状态码</h2><p>状态码配合原因短语一起告诉客户端他的请求处于什么状态,目前有5个种类的状态码</p>\n<ul>\n<li>100~199:信息类状态码(目前实现了2个)</li>\n<li>200~299:成功类状态码(目前实现了7个)</li>\n<li>300~399:重定向类状态码(目前实现了7个)</li>\n<li>400~499:客户端失败状态码(目前实现了18个)</li>\n<li>500~599:服务器端状态码(目前实现了6个)</li>\n</ul>\n<h5 id=\"信息类状态码\"><a href=\"#信息类状态码\" class=\"headerlink\" title=\"信息类状态码\"></a>信息类状态码</h5><p>这类型状态码是http1.1引入的,都比较新也比较受争议,所以目前只实现了2个:</p>\n<ol>\n<li>100 Continue<br>说明服务器端已经收到部分请求,请求客户端继续。那么为什么我们需要这个状态码: http客户端应用程序要发给服务器一个实体的主体,但是在发送前想知道服务器端是否接受服务器端只有接受到带有值为100 continue的expires请求头时才会返回100状态码,</li>\n<li>101 switching protocols<br>说明服务器根据客户端的请示,将协议切换成update首部所列的协议</li>\n</ol>\n<h5 id=\"成功类状态码\"><a href=\"#成功类状态码\" class=\"headerlink\" title=\"成功类状态码\"></a>成功类状态码</h5><p>目前已经实现了7个(200~206)</p>\n<ol>\n<li>200 OK<br>请求没有问题,响应的实体主体部分包含请求的资源</li>\n<li>201 created<br>主要用来创建服务器端请求(PUT)<br>服务器在返回改状态码前必须已经创建好对象<br>响应的主体部分应该包含各组引用了已创建的资源的URL</li>\n<li>202 Accept<br>请求已经被接受,但是服务器还未对该请求做任何处理也不能保证服务器能完成这个请求<br>返回的实体主体部分包含对该请求的状态描述,或者也可以加上对请求完成时间的估计</li>\n<li>203 None-Authoritative Information<br>实体的信息不是来自于服务器端,而是来自于资源的一个副本<br>如中间节点上有一份资源副本,但无法或者对发送资源进行验证就可以发送这个状态码</li>\n<li>204 No content<br>响应中包含起始行和首部,但是每天实体的主体部分<br>主要用于浏览器不转为显示新文档的情况下对其进行更新</li>\n<li>205 Reset content<br>也是主要用于浏览器<br>用于告知浏览器清空所以得HTML元素</li>\n<li>206 partial content<br>成功的执行了一个range请求<br>206响应必须包含以下几个响应</li>\n</ol>\n<ul>\n<li>Content-range</li>\n<li>Date</li>\n<li>ETag</li>\n<li>Content-Location</li>\n</ul>\n<h5 id=\"重定向类状态码-目前实现了7个\"><a href=\"#重定向类状态码-目前实现了7个\" class=\"headerlink\" title=\"重定向类状态码(目前实现了7个)\"></a>重定向类状态码(目前实现了7个)</h5><ol>\n<li>300 Multiple Choice<br>请求的url对应多个资源(中文、英文等)会返回该状态码<br>服务器可以在响应的location首部给出首选的URL</li>\n<li>301 Moved permanently<br>表示请求的资源已经转移<br>响应的location头部应该包含资源的新URL</li>\n<li>302 Found<br>与301类似,客户端使用响应的location首部来临时定位资源<br>以后还是会使用来的URL定位资源</li>\n<li>303 See Other<br>告知客户端使用另一个URL来访问资源<br>新的URL位于响应的location首部<br>主要目的是容许post请求将客户端定位到某个资源上<br>讲真,我已经晕了</li>\n<li>304 Not Found<br>这个我倒是经常遇到,传说中的条件缓存<br>客户端的条件get请求,资源未被修改<br>响应的实体不包含主体部分</li>\n<li>305 use proxy<br>必须通过代理来访问资源,代理的位置在响应的location首部</li>\n<li>306 未使用</li>\n<li>307 Temporary Redirect<br>临时的重定向,类似于301,但响应中给出的是临时的url<br>以后还是使用老的url来访问资源</li>\n</ol>\n<h5 id=\"服务器端错误状态码\"><a href=\"#服务器端错误状态码\" class=\"headerlink\" title=\"服务器端错误状态码\"></a>服务器端错误状态码</h5><p>目前实现了6个</p>\n<ol>\n<li>500 Internal server error<br>遇到妨碍服务器提供服务的内部错误时返回</li>\n<li>501 Not implemented<br>客户端发起的请求超出了服务器的能力范围,例如使用了服务器不支持的方法</li>\n<li>502 bad gateway<br>代理在请求的响应链的下一条链时返回一个伪响应(如无法连接父代理)<br>测试过程中,测试服务器挂了会报这个错误类型</li>\n<li>503 service unavailable<br>表示服务器现在没办法为请求提供服务,但是未来可以<br>如果服务器知道什么时候能够用,可以在响应中返回一个包含retry-after首部</li>\n<li>504 gateway timeout<br>类似于408,这里的响应来自于网关或者代理<br>在等服务器等待请求进行响应时超时了</li>\n<li>505 http version not support</li>\n</ol>\n<h2 id=\"学习时间线\"><a href=\"#学习时间线\" class=\"headerlink\" title=\"学习时间线\"></a>学习时间线</h2><h5 id=\"2017-02-27\"><a href=\"#2017-02-27\" class=\"headerlink\" title=\"2017-02-27\"></a>2017-02-27</h5><ul>\n<li>http简介</li>\n<li>http报文结构</li>\n<li>url</li>\n<li>请求的方法</li>\n</ul>\n<h5 id=\"2017-03-01\"><a href=\"#2017-03-01\" class=\"headerlink\" title=\"2017-03-01\"></a>2017-03-01</h5><ul>\n<li>状态码 (信息类状态码、成功类状态码、重定向类状态码、服务器端错误状态码)</li>\n</ul>\n<h2 id=\"鸡汤\"><a href=\"#鸡汤\" class=\"headerlink\" title=\"鸡汤\"></a>鸡汤</h2><p>做一个勤于思考的人~</p>\n"}],"PostAsset":[],"PostCategory":[{"post_id":"cj07m5se50004r6xlejn73abq","category_id":"cj07m5see0006r6xl7dohmt57","_id":"cj07m5seo000dr6xljut2vvql"},{"post_id":"cj07m5sea0005r6xlvvdsztha","category_id":"cj07m5see0006r6xl7dohmt57","_id":"cj07m5seq000hr6xllqgiv6is"},{"post_id":"cj07m5seg0008r6xl343q33m6","category_id":"cj07m5seo000er6xlls64vr7m","_id":"cj07m5ser000lr6xldtqy60wt"},{"post_id":"cj07m5sej0009r6xlg441khiy","category_id":"cj07m5seq000jr6xlbbrqzcnl","_id":"cj07m5set000or6xlibrbonlv"},{"post_id":"cj07m5sel000ar6xl7d70myoz","category_id":"cj07m5ser000mr6xlwhjao4ax","_id":"cj07m5seu000rr6xlaha1ixdm"},{"post_id":"cj07m5sf2001br6xlwpdnyfu8","category_id":"cj07m5sf3001cr6xlo179btyy","_id":"cj07m5sf4001fr6xly8vv6b8w"}],"PostTag":[{"post_id":"cj07m5se50004r6xlejn73abq","tag_id":"cj07m5seg0007r6xlkeazzkm1","_id":"cj07m5sep000gr6xlvjczxvdz"},{"post_id":"cj07m5se50004r6xlejn73abq","tag_id":"cj07m5sem000cr6xlb8prgz4i","_id":"cj07m5seq000ir6xlwqg5qd88"},{"post_id":"cj07m5sea0005r6xlvvdsztha","tag_id":"cj07m5seg0007r6xlkeazzkm1","_id":"cj07m5seu000qr6xlk4llrt9v"},{"post_id":"cj07m5sea0005r6xlvvdsztha","tag_id":"cj07m5seq000kr6xl5wfxxt2u","_id":"cj07m5seu000sr6xl8yl56l63"},{"post_id":"cj07m5sea0005r6xlvvdsztha","tag_id":"cj07m5ses000nr6xlu2vebkzq","_id":"cj07m5sev000ur6xllstzndh3"},{"post_id":"cj07m5seg0008r6xl343q33m6","tag_id":"cj07m5seg0007r6xlkeazzkm1","_id":"cj07m5sex000xr6xlik1novdc"},{"post_id":"cj07m5seg0008r6xl343q33m6","tag_id":"cj07m5sev000tr6xl0u9tn4a3","_id":"cj07m5sex000yr6xlhq1nv47w"},{"post_id":"cj07m5seg0008r6xl343q33m6","tag_id":"cj07m5sew000vr6xlzmdofdhm","_id":"cj07m5sey0010r6xlrolutmmg"},{"post_id":"cj07m5sej0009r6xlg441khiy","tag_id":"cj07m5seg0007r6xlkeazzkm1","_id":"cj07m5sf00013r6xlytre7w5b"},{"post_id":"cj07m5sej0009r6xlg441khiy","tag_id":"cj07m5sex000wr6xl9qhy5hky","_id":"cj07m5sf00014r6xlbc7bl5b0"},{"post_id":"cj07m5sej0009r6xlg441khiy","tag_id":"cj07m5sey000zr6xl6y0wk9k5","_id":"cj07m5sf00016r6xljb35lsav"},{"post_id":"cj07m5sej0009r6xlg441khiy","tag_id":"cj07m5sez0011r6xlwt0c4kro","_id":"cj07m5sf00017r6xlg88xrvsv"},{"post_id":"cj07m5sel000ar6xl7d70myoz","tag_id":"cj07m5seg0007r6xlkeazzkm1","_id":"cj07m5sf00018r6xlw7u1wkbw"},{"post_id":"cj07m5sel000ar6xl7d70myoz","tag_id":"cj07m5sez0012r6xlo9e5er71","_id":"cj07m5sf10019r6xldqx32e81"},{"post_id":"cj07m5sel000ar6xl7d70myoz","tag_id":"cj07m5sf00015r6xlmop57ogt","_id":"cj07m5sf1001ar6xl8knsxggw"},{"post_id":"cj07m5sf2001br6xlwpdnyfu8","tag_id":"cj07m5seg0007r6xlkeazzkm1","_id":"cj07m5sf4001er6xly0kur8ls"},{"post_id":"cj07m5sf2001br6xlwpdnyfu8","tag_id":"cj07m5sf3001dr6xl6m52caa1","_id":"cj07m5sf5001gr6xlg2pvl881"}],"Tag":[{"name":"前端开发","_id":"cj07m5seg0007r6xlkeazzkm1"},{"name":"个人成长","_id":"cj07m5sem000cr6xlb8prgz4i"},{"name":"前端资料总结","_id":"cj07m5seq000kr6xl5wfxxt2u"},{"name":"JavaScript、HTML、CSS、Node","_id":"cj07m5ses000nr6xlu2vebkzq"},{"name":"前端面试题","_id":"cj07m5sev000tr6xl0u9tn4a3"},{"name":"HTML5简介","_id":"cj07m5sew000vr6xlzmdofdhm"},{"name":"js实现对象的深度克隆","_id":"cj07m5sex000wr6xl9qhy5hky"},{"name":"javascript","_id":"cj07m5sey000zr6xl6y0wk9k5"},{"name":"深度克隆","_id":"cj07m5sez0011r6xlwt0c4kro"},{"name":"代码版本控制","_id":"cj07m5sez0012r6xlo9e5er71"},{"name":"git","_id":"cj07m5sf00015r6xlmop57ogt"},{"name":"HTTP学习总结","_id":"cj07m5sf3001dr6xl6m52caa1"}]}}